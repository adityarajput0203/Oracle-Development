EXTRACT E_TCL_01
OBEY ?PARAMFILES/DEFAULTS.prm
EXTTRAIL ./TCL_01/td
OBEY ?PARAMFILES/TCL.prm
CACHEMGR CACHESIZE 2048M CACHEDIRECTORY ?CACHEDIR/TCL_01
GETUPDATEBEFORES

--TABLE FA.FA_ADJUSTMENTS, COLS(TRANSACTION_HEADER_ID,SOURCE_TYPE_CODE,ADJUSTMENT_TYPE,DEBIT_CREDIT_FLAG,CODE_COMBINATION_ID,BOOK_TYPE_CODE,ASSET_ID,ADJUSTMENT_AMOUNT,DISTRIBUTION_ID,ANNUALIZED_ADJUSTMENT,JE_HEADER_ID,JE_LINE_NUM,PERIOD_COUNTER_ADJUSTED,PERIOD_COUNTER_CREATED,ASSET_INVOICE_ID,ADJUSTMENT_LINE_ID,DEPRN_OVERRIDE_FLAG), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_ADJUSTMENTS, PARAMS (P_TABLE_NAME ='FA_ADJUSTMENTS', P_KEY_VALUE1=1, P_KEY_VALUE7=2, P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_ADJUSTMENTS.P_COUNT_VAL) > 0 );
--TABLE FA.FA_DISTRIBUTION_ACCOUNTS, SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_DISTRIBUTION_ACCOUNTS, PARAMS (P_TABLE_NAME ='FA_DISTRIBUTION_ACCOUNTS', P_KEY_VALUE1=1, P_KEY_VALUE7=2, P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_DISTRIBUTION_ACCOUNTS.P_COUNT_VAL) > 0 );
TABLE AP.AP_CHECKS_ALL, KEYCOLS (CHECK_ID,CHECK_NUMBER),COLS(CHECK_ID, AMOUNT, BANK_ACCOUNT_NAME, CHECK_DATE, CHECK_NUMBER, CURRENCY_CODE, BANK_ACCOUNT_NUM, BANK_NUM, CLEARED_AMOUNT, CLEARED_DATE, CLEARED_BASE_AMOUNT, ORG_ID, VENDOR_ID, VENDOR_SITE_ID, PAYMENT_METHOD_CODE, PARTY_ID, PARTY_SITE_ID, PAYMENT_PROFILE_ID, PAYMENT_DOCUMENT_ID, PAYMENT_ID, PAYMENT_INSTRUCTION_ID, REMIT_TO_SUPPLIER_NAME, REMIT_TO_SUPPLIER_ID, REMIT_TO_SUPPLIER_SITE, REMIT_TO_SUPPLIER_SITE_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AP_CHECKS_ALL, PARAMS (P_TABLE_NAME ='AP_CHECKS_ALL', P_KEY_VALUE1=@BEFORE(CHECK_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AP_CHECKS_ALL.P_COUNT_VAL) > 0 );
TABLE AP.AP_INVOICE_DISTRIBUTIONS_ALL, KEYCOLS (INVOICE_DISTRIBUTION_ID,ACCOUNTING_DATE),COLS(INVOICE_DISTRIBUTION_ID, ACCOUNTING_DATE, DISTRIBUTION_LINE_NUMBER, DIST_CODE_COMBINATION_ID, INVOICE_ID, LINE_TYPE_LOOKUP_CODE, PERIOD_NAME, SET_OF_BOOKS_ID, ACCTS_PAY_CODE_COMBINATION_ID, AMOUNT, BASE_AMOUNT, DESCRIPTION, POSTED_FLAG, PO_DISTRIBUTION_ID, QUANTITY_INVOICED, UNIT_PRICE, ORG_ID, RCV_TRANSACTION_ID, ACCOUNTING_EVENT_ID, INVOICE_LINE_NUMBER, CHARGE_APPLICABLE_TO_DIST_ID, DISTRIBUTION_CLASS, DETAIL_TAX_DIST_ID, TAXABLE_AMOUNT, TAXABLE_BASE_AMOUNT, TOTAL_DIST_AMOUNT, TOTAL_DIST_BASE_AMOUNT), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AP_INVOICE_DISTRIBUTIONS_ALL, PARAMS (P_TABLE_NAME ='AP_INVOICE_DISTRIBUTIONS_ALL', P_KEY_VALUE1=@BEFORE(INVOICE_DISTRIBUTION_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AP_INVOICE_DISTRIBUTIONS_ALL.P_COUNT_VAL) > 0 );
TABLE AP.AP_INVOICE_LINES_ALL, KEYCOLS (INVOICE_ID,LINE_NUMBER,PERIOD_NAME),COLS(INVOICE_ID, LINE_NUMBER, LINE_TYPE_LOOKUP_CODE, DESCRIPTION, ORG_ID, INVENTORY_ITEM_ID, ITEM_DESCRIPTION, DEFAULT_DIST_CCID, ACCOUNTING_DATE, PERIOD_NAME, AMOUNT, BASE_AMOUNT, QUANTITY_INVOICED, UNIT_PRICE, PO_HEADER_ID, PO_LINE_ID, PO_RELEASE_ID, PO_LINE_LOCATION_ID, PO_DISTRIBUTION_ID, RCV_TRANSACTION_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AP_INVOICE_LINES_ALL, PARAMS (P_TABLE_NAME ='AP_INVOICE_LINES_ALL', P_KEY_VALUE1=@BEFORE(INVOICE_ID), P_KEY_VALUE2=@BEFORE(LINE_NUMBER),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AP_INVOICE_LINES_ALL.P_COUNT_VAL) > 0 );
TABLE AP.AP_INVOICE_PAYMENTS_ALL, KEYCOLS (ACCOUNTING_EVENT_ID,PERIOD_NAME),COLS(ACCOUNTING_EVENT_ID, ACCOUNTING_DATE, AMOUNT, CHECK_ID, INVOICE_ID, INVOICE_PAYMENT_ID, PERIOD_NAME, POSTED_FLAG, ASSET_CODE_COMBINATION_ID, DISCOUNT_TAKEN, EXCHANGE_RATE, EXTERNAL_BANK_ACCOUNT_ID, INVOICING_PARTY_ID, INVOICING_PARTY_SITE_ID, INVOICING_VENDOR_SITE_ID, REMIT_TO_SUPPLIER_NAME, REMIT_TO_SUPPLIER_ID, REMIT_TO_SUPPLIER_SITE, REMIT_TO_SUPPLIER_SITE_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AP_INVOICE_PAYMENTS_ALL, PARAMS (P_TABLE_NAME ='AP_INVOICE_PAYMENTS_ALL', P_KEY_VALUE1=@BEFORE(ACCOUNTING_EVENT_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AP_INVOICE_PAYMENTS_ALL.P_COUNT_VAL) > 0 );
TABLE AP.AP_INVOICES_ALL, KEYCOLS (INVOICE_ID,INVOICE_NUM,GL_DATE),COLS(INVOICE_ID, VENDOR_ID, INVOICE_NUM, SET_OF_BOOKS_ID, INVOICE_AMOUNT, VENDOR_SITE_ID, AMOUNT_PAID, INVOICE_DATE, AMOUNT_APPLICABLE_TO_DISCOUNT,TAX_AMOUNT, TERMS_ID, TERMS_DATE, PAYMENT_METHOD_LOOKUP_CODE, PAY_GROUP_LOOKUP_CODE, ACCTS_PAY_CODE_COMBINATION_ID, PAYMENT_STATUS_FLAG, GOODS_RECEIVED_DATE, INVOICE_RECEIVED_DATE,INVOICE_CURRENCY_CODE,PAYMENT_CURRENCY_CODE,GL_DATE,ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AP_INVOICES_ALL, PARAMS (P_TABLE_NAME ='AP_INVOICES_ALL', P_KEY_VALUE1=@BEFORE(INVOICE_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AP_INVOICES_ALL.P_COUNT_VAL) > 0 );
--Kunal Test
--TABLE AP.AP_INVOICES_ALL,KEYCOLS (INVOICE_ID,INVOICE_NUM,GL_DATE), COLS(INVOICE_ID,INVOICE_AMOUNT,ORG_ID), SQLEXEC (ID AP_INVOICES_ALL, QUERY "select count(1) output from AP.AP_INVOICES_ALL where (NVL(INVOICE_AMOUNT,1) != nvl(:VAR_1,1) or NVL(ORG_ID,'ORG_ID') != nvl(:VAR_2,'ORG_ID')) and INVOICE_ID = :VAR_3",PARAMS (VAR_1=@before(INVOICE_AMOUNT),VAR_2=@before(ORG_ID),VAR_3=@before(INVOICE_ID)) , BEFOREFILTER), FILTER (AP_INVOICES_ALL.output > 0);
--TABLE AP.AP_INVOICES_ALL, KEYCOLS (INVOICE_ID,INVOICE_NUM,GL_DATE), COLS(INVOICE_ID, VENDOR_ID, INVOICE_NUM, SET_OF_BOOKS_ID, INVOICE_AMOUNT, VENDOR_SITE_ID, AMOUNT_PAID, INVOICE_DATE, AMOUNT_APPLICABLE_TO_DISCOUNT, TAX_AMOUNT, TERMS_ID, TERMS_DATE, PAYMENT_METHOD_LOOKUP_CODE,ACCTS_PAY_CODE_COMBINATION_ID, PAYMENT_STATUS_FLAG, GOODS_RECEIVED_DATE, INVOICE_RECEIVED_DATE,INVOICE_CURRENCY_CODE,PAYMENT_CURRENCY_CODE,GL_DATE,ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AP_INVOICES_ALL, PARAMS (P_TABLE_NAME ='AP_INVOICES_ALL',  O1=@BEFORE(INVOICE_ID), O2=@BEFORE(VENDOR_ID), O3=@BEFORE(INVOICE_NUM), O4=@BEFORE(SET_OF_BOOKS_ID), O5=@BEFORE(INVOICE_AMOUNT), O6=@BEFORE(VENDOR_SITE_ID), O7=@BEFORE(AMOUNT_PAID), O8=@BEFORE(INVOICE_DATE), O9=@BEFORE(AMOUNT_APPLICABLE_TO_DISCOUNT), O11=@BEFORE(TAX_AMOUNT), O12=@BEFORE(TERMS_ID), O13=@BEFORE(TERMS_DATE), O14=@BEFORE(PAYMENT_METHOD_LOOKUP_CODE),O16=@BEFORE(ACCTS_PAY_CODE_COMBINATION_ID), O17=@BEFORE(PAYMENT_STATUS_FLAG), O18=@BEFORE(GOODS_RECEIVED_DATE), O19=@BEFORE(INVOICE_RECEIVED_DATE), O20=@BEFORE(INVOICE_CURRENCY_CODE),O21=@BEFORE(PAYMENT_CURRENCY_CODE),O22=@BEFORE(GL_DATE),O23=@BEFORE(ORG_ID),N1=(INVOICE_ID), N2=(VENDOR_ID), N3=(INVOICE_NUM), N4=(SET_OF_BOOKS_ID), N5=(INVOICE_AMOUNT), N6=(VENDOR_SITE_ID), N7=(AMOUNT_PAID), N8=(INVOICE_DATE), N9=(AMOUNT_APPLICABLE_TO_DISCOUNT), N11=(TAX_AMOUNT), N12=(TERMS_ID), N13=(TERMS_DATE), N14=(PAYMENT_METHOD_LOOKUP_CODE),N16=(ACCTS_PAY_CODE_COMBINATION_ID), N17=(PAYMENT_STATUS_FLAG), N18=(GOODS_RECEIVED_DATE), N19=(INVOICE_RECEIVED_DATE), N20=(INVOICE_CURRENCY_CODE),N21=(PAYMENT_CURRENCY_CODE),N22=(GL_DATE),N23=(ORG_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AP_INVOICES_ALL.P_COUNT_VAL) > 0 );
--Kunal Test
TABLE AP.AP_PAYMENT_HISTORY_ALL, KEYCOLS (ACCOUNTING_EVENT_ID,ACCOUNTING_DATE),COLS(ACCOUNTING_EVENT_ID,PAYMENT_HISTORY_ID, CHECK_ID, ACCOUNTING_DATE, POSTED_FLAG, ACCOUNTING_EVENT_ID, ORG_ID, TRX_BANK_AMOUNT, TRX_PMT_AMOUNT, TRX_BASE_AMOUNT, BANK_CURRENCY_CODE, RELATED_EVENT_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AP_PAYMENT_HISTORY_ALL, PARAMS (P_TABLE_NAME ='AP_PAYMENT_HISTORY_ALL', P_KEY_VALUE1=@BEFORE(ACCOUNTING_EVENT_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AP_PAYMENT_HISTORY_ALL.P_COUNT_VAL) > 0 );
TABLE AP.AP_PAYMENT_SCHEDULES_ALL, KEYCOLS (INVOICE_ID,REMIT_TO_SUPPLIER_NAME),COLS(INVOICE_ID, PAYMENT_NUM, AMOUNT_REMAINING, DUE_DATE, GROSS_AMOUNT, PAYMENT_PRIORITY, PAYMENT_STATUS_FLAG, BATCH_ID, EXTERNAL_BANK_ACCOUNT_ID, INV_CURR_GROSS_AMOUNT, PAYMENT_METHOD_CODE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AP_PAYMENT_SCHEDULES_ALL, PARAMS (P_TABLE_NAME ='AP_PAYMENT_SCHEDULES_ALL', P_KEY_VALUE1=@BEFORE(INVOICE_ID), P_KEY_VALUE2=@BEFORE(PAYMENT_NUM),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AP_PAYMENT_SCHEDULES_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_ADJUSTMENTS_ALL, KEYCOLS (EVENT_ID,ADJUSTMENT_NUMBER),COLS(EVENT_ID, ADJUSTMENT_ID, AMOUNT, APPLY_DATE, GL_DATE, CODE_COMBINATION_ID, TYPE, STATUS, LINE_ADJUSTED, FREIGHT_ADJUSTED, TAX_ADJUSTED, RECEIVABLES_CHARGES_ADJUSTED, CUSTOMER_TRX_ID, PAYMENT_SCHEDULE_ID, RECEIVABLES_TRX_ID, GL_POSTED_DATE, ACCTD_AMOUNT, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AR_ADJUSTMENTS_ALL, PARAMS (P_TABLE_NAME ='AR_ADJUSTMENTS_ALL', P_KEY_VALUE1=@BEFORE(EVENT_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_ADJUSTMENTS_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_CASH_RECEIPT_HISTORY_ALL, KEYCOLS (CASH_RECEIPT_HISTORY_ID,GL_DATE),COLS(CASH_RECEIPT_HISTORY_ID, CASH_RECEIPT_ID, STATUS, TRX_DATE, AMOUNT, GL_DATE, ACCOUNT_CODE_COMBINATION_ID, REVERSAL_GL_DATE, GL_POSTED_DATE, ACCTD_AMOUNT, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AR_CASH_RECEIPT_HISTORY_ALL, PARAMS (P_TABLE_NAME ='AR_CASH_RECEIPT_HISTORY_ALL', P_KEY_VALUE1=@BEFORE(CASH_RECEIPT_HISTORY_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_CASH_RECEIPT_HISTORY_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_CASH_RECEIPTS_ALL, KEYCOLS (CASH_RECEIPT_ID,RECEIPT_NUMBER),COLS(CASH_RECEIPT_ID, CREATION_DATE,AMOUNT,CURRENCY_CODE,RECEIVABLES_TRX_ID,PAY_FROM_CUSTOMER,STATUS,RECEIPT_NUMBER,RECEIPT_DATE,REVERSAL_DATE,CUSTOMER_BANK_ACCOUNT_ID,CUSTOMER_SITE_USE_ID,DEPOSIT_DATE,RECEIPT_METHOD_ID,DOC_SEQUENCE_VALUE,ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AR_CASH_RECEIPTS_ALL, PARAMS (P_TABLE_NAME ='AR_CASH_RECEIPTS_ALL', P_KEY_VALUE1=@BEFORE(CASH_RECEIPT_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_CASH_RECEIPTS_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_DEFERRED_LINES_ALL, KEYCOLS (CUSTOMER_TRX_LINE_ID),COLS(CUSTOMER_TRX_LINE_ID, CUSTOMER_TRX_ID, AMOUNT_DUE_ORIGINAL, ACCTD_AMOUNT_DUE_ORIGINAL, AMOUNT_RECOGNIZED, ACCTD_AMOUNT_RECOGNIZED, AMOUNT_PENDING, ACCTD_AMOUNT_PENDING, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AR_DEFERRED_LINES_ALL, PARAMS (P_TABLE_NAME ='AR_DEFERRED_LINES_ALL', P_KEY_VALUE1=@BEFORE(CUSTOMER_TRX_LINE_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_DEFERRED_LINES_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_DISTRIBUTIONS_ALL, KEYCOLS (LINE_ID),COLS(LINE_ID, SOURCE_ID, SOURCE_TABLE, SOURCE_TYPE, CODE_COMBINATION_ID, AMOUNT_DR, AMOUNT_CR, ACCTD_AMOUNT_DR, ACCTD_AMOUNT_CR, ORG_ID,CURRENCY_CODE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AR_DISTRIBUTIONS_ALL, PARAMS (P_TABLE_NAME ='AR_DISTRIBUTIONS_ALL', P_KEY_VALUE1=@BEFORE(LINE_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_DISTRIBUTIONS_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_PAYMENT_SCHEDULES_ALL, KEYCOLS (PAYMENT_SCHEDULE_ID,TRX_NUMBER,TRX_DATE),COLS(PAYMENT_SCHEDULE_ID, CREATION_DATE, DUE_DATE, AMOUNT_DUE_ORIGINAL, AMOUNT_DUE_REMAINING, STATUS, CUST_TRX_TYPE_ID, CUSTOMER_ID, CUSTOMER_SITE_USE_ID, CUSTOMER_TRX_ID, TERM_ID, AMOUNT_LINE_ITEMS_ORIGINAL, AMOUNT_LINE_ITEMS_REMAINING, AMOUNT_APPLIED, AMOUNT_ADJUSTED, TAX_ORIGINAL, TAX_REMAINING, TRX_NUMBER, TRX_DATE, GL_DATE, ACCTD_AMOUNT_DUE_REMAINING), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AR_PAYMENT_SCHEDULES_ALL, PARAMS (P_TABLE_NAME ='AR_PAYMENT_SCHEDULES_ALL', P_KEY_VALUE1=@BEFORE(PAYMENT_SCHEDULE_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_PAYMENT_SCHEDULES_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_RECEIVABLE_APPLICATIONS_ALL, KEYCOLS (RECEIVABLE_APPLICATION_ID,EVENT_ID,CUSTOMER_TRX_ID,GL_DATE),COLS(RECEIVABLE_APPLICATION_ID, EVENT_ID, CUSTOMER_TRX_ID, AMOUNT_APPLIED, GL_DATE, CODE_COMBINATION_ID, APPLY_DATE, PAYMENT_SCHEDULE_ID, CASH_RECEIPT_ID, APPLIED_CUSTOMER_TRX_ID, APPLIED_PAYMENT_SCHEDULE_ID, LINE_APPLIED, TAX_APPLIED, FREIGHT_APPLIED, GL_POSTED_DATE, ACCTD_AMOUNT_APPLIED_FROM, EARNED_DISCOUNT_CCID, UNEARNED_DISCOUNT_CCID, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AR_RECEIVABLE_APPLICATIONS_ALL, PARAMS (P_TABLE_NAME ='AR_RECEIVABLE_APPLICATIONS_ALL', P_KEY_VALUE1=@BEFORE(RECEIVABLE_APPLICATION_ID), P_KEY_VALUE2=@BEFORE(EVENT_ID), P_KEY_VALUE3=@BEFORE(CUSTOMER_TRX_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_RECEIVABLE_APPLICATIONS_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_REVENUE_ADJUSTMENTS_ALL, KEYCOLS (REVENUE_ADJUSTMENT_ID,REVENUE_ADJUSTMENT_NUMBER),COLS(REVENUE_ADJUSTMENT_ID, REVENUE_ADJUSTMENT_NUMBER, CUSTOMER_TRX_ID, APPLICATION_DATE, AMOUNT, GL_DATE, STATUS, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID AR_REVENUE_ADJUSTMENTS_ALL, PARAMS (P_TABLE_NAME ='AR_REVENUE_ADJUSTMENTS_ALL', P_KEY_VALUE1=@BEFORE(REVENUE_ADJUSTMENT_ID), P_KEY_VALUE2=@BEFORE(REVENUE_ADJUSTMENT_NUMBER), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_REVENUE_ADJUSTMENTS_ALL.P_COUNT_VAL) > 0 );
TABLE BOM.BOM_COMPONENTS_B, KEYCOLS (COMPONENT_SEQUENCE_ID,ITEM_NUM),COLS(COMPONENT_SEQUENCE_ID, COMPONENT_ITEM_ID, ITEM_NUM, COMPONENT_QUANTITY, EFFECTIVITY_DATE, IMPLEMENTATION_DATE, FROM_END_ITEM_UNIT_NUMBER, TO_END_ITEM_UNIT_NUMBER), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID BOM_COMPONENTS_B, PARAMS (P_TABLE_NAME ='BOM_COMPONENTS_B', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (BOM_COMPONENTS_B.P_COUNT_VAL) > 0 );
TABLE BOM.BOM_STRUCTURES_B, KEYCOLS (BILL_SEQUENCE_ID),COLS(BILL_SEQUENCE_ID, ASSEMBLY_ITEM_ID, ORGANIZATION_ID, ATTRIBUTE1, COMMON_BILL_SEQUENCE_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID BOM_STRUCTURES_B, PARAMS (P_TABLE_NAME ='BOM_STRUCTURES_B', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (BOM_STRUCTURES_B.P_COUNT_VAL) > 0 );
TABLE FA.FA_ADDITIONS_B, KEYCOLS (ASSET_ID,ASSET_NUMBER),COLS(ASSET_ID, ASSET_NUMBER, ASSET_KEY_CCID, CURRENT_UNITS, ASSET_TYPE, ASSET_CATEGORY_ID, PARENT_ASSET_ID, IN_USE_FLAG, OWNED_LEASED, NEW_USED, ATTRIBUTE_CATEGORY_CODE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_ADDITIONS_B, PARAMS (P_TABLE_NAME ='FA_ADDITIONS_B', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_ADDITIONS_B.P_COUNT_VAL) > 0 );
TABLE FA.FA_TRANSACTION_HEADERS, KEYCOLS (TRANSACTION_HEADER_ID,EVENT_ID),COLS(TRANSACTION_HEADER_ID, EVENT_ID, BOOK_TYPE_CODE, ASSET_ID, TRANSACTION_TYPE_CODE, TRANSACTION_DATE_ENTERED, DATE_EFFECTIVE, INVOICE_TRANSACTION_ID, SOURCE_TRANSACTION_HEADER_ID, MASS_REFERENCE_ID, TRANSACTION_SUBTYPE, TRANSACTION_KEY, AMORTIZATION_START_DATE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_TRANSACTION_HEADERS, PARAMS (P_TABLE_NAME ='FA_TRANSACTION_HEADERS',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_TRANSACTION_HEADERS.P_COUNT_VAL) > 0 );
--TABLE FA.FA_DISTRIBUTION_HISTORY, KEYCOLS (TRANSACTION_HEADER_ID_IN,TRANSACTION_HEADER_ID_OUT),COLS(TRANSACTION_HEADER_ID_IN, TRANSACTION_HEADER_ID_OUT, DISTRIBUTION_ID, BOOK_TYPE_CODE, ASSET_ID, UNITS_ASSIGNED, DATE_EFFECTIVE, CODE_COMBINATION_ID, LOCATION_ID, TRANSACTION_HEADER_ID_IN), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_DISTRIBUTION_HISTORY, PARAMS (P_TABLE_NAME ='FA_DISTRIBUTION_HISTORY', O1=@BEFORE(TRANSACTION_HEADER_ID_IN), O2=@BEFORE(TRANSACTION_HEADER_ID_OUT), O3=@BEFORE(DISTRIBUTION_ID), O4=@BEFORE(BOOK_TYPE_CODE), O5=@BEFORE(ASSET_ID), O6=@BEFORE(UNITS_ASSIGNED), O7=@BEFORE(DATE_EFFECTIVE), O8=@BEFORE(CODE_COMBINATION_ID), O9=@BEFORE(LOCATION_ID), O10=@BEFORE(TRANSACTION_HEADER_ID_IN),  N1=@AFTER(TRANSACTION_HEADER_ID_IN), N2=@AFTER(TRANSACTION_HEADER_ID_OUT), N3=@AFTER(DISTRIBUTION_ID), N4=@AFTER(BOOK_TYPE_CODE), N5=@AFTER(ASSET_ID), N6=@AFTER(UNITS_ASSIGNED), N7=@AFTER(DATE_EFFECTIVE), N8=@AFTER(CODE_COMBINATION_ID), N9=@AFTER(LOCATION_ID), N10=@AFTER(TRANSACTION_HEADER_ID_IN), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_DISTRIBUTION_HISTORY.P_COUNT_VAL) > 0 );
TABLE FA.FA_DEPRN_DETAIL, KEYCOLS (BOOK_TYPE_CODE,DISTRIBUTION_ID,PERIOD_COUNTER),COLS(BOOK_TYPE_CODE, ASSET_ID, PERIOD_COUNTER, DISTRIBUTION_ID, DEPRN_SOURCE_CODE, DEPRN_RUN_DATE, DEPRN_AMOUNT, YTD_DEPRN, DEPRN_RESERVE, ADDITION_COST_TO_CLEAR, COST, DEPRN_ADJUSTMENT_AMOUNT), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_DEPRN_DETAIL, PARAMS (P_TABLE_NAME ='FA_DEPRN_DETAIL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_DEPRN_DETAIL.P_COUNT_VAL) > 0 );
TABLE FA.FA_BOOKS, KEYCOLS (TRANSACTION_HEADER_ID_IN), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_BOOKS, PARAMS (P_TABLE_NAME ='FA_BOOKS',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_BOOKS.P_COUNT_VAL) > 0 );
TABLE FA.FA_ADJUSTMENTS, KEYCOLS (TRANSACTION_HEADER_ID),COLS(TRANSACTION_HEADER_ID, SOURCE_TYPE_CODE, ADJUSTMENT_TYPE, DEBIT_CREDIT_FLAG, CODE_COMBINATION_ID, BOOK_TYPE_CODE, ASSET_ID, ADJUSTMENT_AMOUNT, DISTRIBUTION_ID, ANNUALIZED_ADJUSTMENT, JE_HEADER_ID, JE_LINE_NUM, PERIOD_COUNTER_ADJUSTED, PERIOD_COUNTER_CREATED, ASSET_INVOICE_ID, ADJUSTMENT_LINE_ID,DEPRN_OVERRIDE_FLAG), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_ADJUSTMENTS, PARAMS (P_TABLE_NAME ='FA_ADJUSTMENTS', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_ADJUSTMENTS.P_COUNT_VAL) > 0 );
TABLE FA.FA_DISTRIBUTION_ACCOUNTS, KEYCOLS (DISTRIBUTION_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_DISTRIBUTION_ACCOUNTS, PARAMS (P_TABLE_NAME ='FA_DISTRIBUTION_ACCOUNTS',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_DISTRIBUTION_ACCOUNTS.P_COUNT_VAL) > 0 );
TABLE FA.FA_RETIREMENTS, KEYCOLS (TRANSACTION_HEADER_ID_IN,TRANSACTION_HEADER_ID_OUT),COLS(TRANSACTION_HEADER_ID_IN, TRANSACTION_HEADER_ID_OUT, RETIREMENT_ID, BOOK_TYPE_CODE, ASSET_ID, TRANSACTION_HEADER_ID_IN, DATE_RETIRED, DATE_EFFECTIVE, COST_RETIRED, STATUS, RETIREMENT_PRORATE_CONVENTION, UNITS, COST_OF_REMOVAL, NBV_RETIRED, GAIN_LOSS_AMOUNT, PROCEEDS_OF_SALE, STL_LIFE_IN_MONTHS, STL_DEPRN_AMOUNT, UNREVALUED_COST_RETIRED), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID FA_RETIREMENTS, PARAMS (P_TABLE_NAME ='FA_RETIREMENTS',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (FA_RETIREMENTS.P_COUNT_VAL) > 0 );
TABLE GL.GL_BALANCES, KEYCOLS (LEDGER_ID,PERIOD_NAME), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID GL_BALANCES, PARAMS (P_TABLE_NAME ='GL_BALANCES',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (GL_BALANCES.P_COUNT_VAL) > 0 );
TABLE GL.GL_DAILY_RATES, KEYCOLS (CONVERSION_DATE,CONVERSION_TYPE,FROM_CURRENCY,TO_CURRENCY),COLS(FROM_CURRENCY, TO_CURRENCY, CONVERSION_DATE, CONVERSION_TYPE, CONVERSION_RATE, STATUS_CODE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID GL_DAILY_RATES, PARAMS (P_TABLE_NAME ='GL_DAILY_RATES', P_KEY_VALUE1=@BEFORE(TO_CURRENCY), P_KEY_VALUE2=@BEFORE(CONVERSION_TYPE),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (GL_DAILY_RATES.P_COUNT_VAL) > 0 );
TABLE GL.GL_JE_BATCHES, KEYCOLS (JE_BATCH_ID,name),COLS(JE_BATCH_ID, NAME, STATUS, DEFAULT_EFFECTIVE_DATE, APPROVAL_STATUS_CODE, DEFAULT_PERIOD_NAME, POSTED_DATE, DATE_CREATED, DESCRIPTION, RUNNING_TOTAL_DR, RUNNING_TOTAL_CR, RUNNING_TOTAL_ACCOUNTED_DR, RUNNING_TOTAL_ACCOUNTED_CR), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID GL_JE_BATCHES, PARAMS (P_TABLE_NAME ='GL_JE_BATCHES', P_KEY_VALUE1=@BEFORE(STATUS),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (GL_JE_BATCHES.P_COUNT_VAL) > 0 );
TABLE GL.GL_JE_HEADERS, KEYCOLS (JE_HEADER_ID,period_name,name),COLS(JE_HEADER_ID, CURRENCY_CODE, CURRENCY_CONVERSION_DATE, CURRENCY_CONVERSION_RATE, CURRENCY_CONVERSION_TYPE, DATE_CREATED, DEFAULT_EFFECTIVE_DATE, DESCRIPTION, DOC_SEQUENCE_ID, DOC_SEQUENCE_VALUE, JE_BATCH_ID, JE_CATEGORY, JE_SOURCE, LEDGER_ID, NAME, PERIOD_NAME, POSTED_DATE, RUNNING_TOTAL_ACCOUNTED_CR, RUNNING_TOTAL_ACCOUNTED_DR, RUNNING_TOTAL_CR, RUNNING_TOTAL_DR, STATUS), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID GL_JE_HEADERS, PARAMS (P_TABLE_NAME ='GL_JE_HEADERS', P_KEY_VALUE1=@BEFORE(STATUS), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (GL_JE_HEADERS.P_COUNT_VAL) > 0 );
TABLE GL.GL_JE_LINES, KEYCOLS (JE_HEADER_ID,JE_LINE_NUM,period_name,DESCRIPTION),COLS(JE_HEADER_ID, JE_LINE_NUM, LEDGER_ID, CODE_COMBINATION_ID, PERIOD_NAME, EFFECTIVE_DATE, STATUS, ENTERED_DR, ENTERED_CR, ACCOUNTED_DR, ACCOUNTED_CR, DESCRIPTION), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID GL_JE_LINES, PARAMS (P_TABLE_NAME ='GL_JE_LINES', P_KEY_VALUE1=@BEFORE(STATUS),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (GL_JE_LINES.P_COUNT_VAL) > 0 );
TABLE IBY.IBY_EXT_BANK_ACCOUNTS, KEYCOLS (EXT_BANK_ACCOUNT_ID),COLS(EXT_BANK_ACCOUNT_ID, BRANCH_ID, BANK_ID, BANK_ACCOUNT_NUM, BANK_ACCOUNT_NUM_HASH1, BANK_ACCOUNT_NUM_HASH2, MASKED_BANK_ACCOUNT_NUM, BANK_ACCOUNT_NAME, BANK_ACCOUNT_NUM_ELECTRONIC), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID IBY_EXT_BANK_ACCOUNTS, PARAMS (P_TABLE_NAME ='IBY_EXT_BANK_ACCOUNTS',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (IBY_EXT_BANK_ACCOUNTS.P_COUNT_VAL) > 0 );
TABLE IBY.IBY_EXTERNAL_PAYEES_ALL, KEYCOLS (EXT_PAYEE_ID,PAYEE_PARTY_ID),COLS(EXT_PAYEE_ID, PAYEE_PARTY_ID, PARTY_SITE_ID, SUPPLIER_SITE_ID, ORG_ID, ORG_TYPE, DEFAULT_PAYMENT_METHOD_CODE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID IBY_EXTERNAL_PAYEES_ALL, PARAMS (P_TABLE_NAME ='IBY_EXTERNAL_PAYEES_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (IBY_EXTERNAL_PAYEES_ALL.P_COUNT_VAL) > 0 );
--TABLE JA.JAI_CMN_INVENTORY_ORGS, KEYCOLS (ORG_UNIT_ID,PAN_NO), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID JAI_CMN_INVENTORY_ORGS, PARAMS (P_TABLE_NAME ='JAI_CMN_INVENTORY_ORGS',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (JAI_CMN_INVENTORY_ORGS.P_COUNT_VAL) > 0 );
TABLE INV.MTL_MATERIAL_TRANSACTIONS, KEYCOLS (TRANSACTION_ID),COLS(TRANSACTION_ID, INVENTORY_ITEM_ID, ORGANIZATION_ID, SUBINVENTORY_CODE, TRANSACTION_TYPE_ID, TRANSACTION_QUANTITY, TRANSACTION_UOM, TRANSACTION_DATE, ACCT_PERIOD_ID, ACTUAL_COST, PRIOR_COST, NEW_COST), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID MTL_MATERIAL_TRANSACTIONS, PARAMS (P_TABLE_NAME ='MTL_MATERIAL_TRANSACTIONS', P_KEY_VALUE1=@BEFORE(TRANSACTION_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (MTL_MATERIAL_TRANSACTIONS.P_COUNT_VAL) > 0 );
TABLE ONT.OE_ORDER_HEADERS_ALL, KEYCOLS (HEADER_ID,ORDER_NUMBER),COLS(HEADER_ID, ORG_ID, ORDER_TYPE_ID, ORDER_NUMBER, PRICE_LIST_ID, CUST_PO_NUMBER, PAYMENT_TERM_ID, FOB_POINT_CODE, SOLD_FROM_ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID OE_ORDER_HEADERS_ALL, PARAMS (P_TABLE_NAME ='OE_ORDER_HEADERS_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (OE_ORDER_HEADERS_ALL.P_COUNT_VAL) > 0 );
TABLE ONT.OE_ORDER_LINES_ALL, KEYCOLS (LINE_ID,LINE_NUMBER,ORDERED_ITEM),COLS(LINE_ID, ORG_ID, HEADER_ID, LINE_TYPE_ID, ORDERED_ITEM, ORDERED_QUANTITY, SHIP_FROM_ORG_ID, SOLD_FROM_ORG_ID, CUST_PO_NUMBER, INVENTORY_ITEM_ID, TAX_DATE, PRICE_LIST_ID, PRICING_DATE, FOB_POINT_CODE, PAYMENT_TERM_ID, UNIT_SELLING_PRICE, UNIT_LIST_PRICE,ORDER_QUANTITY_UOM), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID OE_ORDER_LINES_ALL, PARAMS (P_TABLE_NAME ='OE_ORDER_LINES_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (OE_ORDER_LINES_ALL.P_COUNT_VAL) > 0 );
TABLE ONT.OE_TRANSACTION_TYPES_ALL, KEYCOLS (TRANSACTION_TYPE_ID),COLS(TRANSACTION_TYPE_ID, START_DATE_ACTIVE, END_DATE_ACTIVE, CUST_TRX_TYPE_ID, COST_OF_GOODS_SOLD_ACCOUNT, PRICE_LIST_ID, WAREHOUSE_ID, INVOICING_RULE_ID, ACCOUNTING_RULE_ID, ACCOUNTING_CREDIT_METHOD_CODE, INVOICE_SOURCE_ID, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID OE_TRANSACTION_TYPES_ALL, PARAMS (P_TABLE_NAME ='OE_TRANSACTION_TYPES_ALL',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (OE_TRANSACTION_TYPES_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_DISTRIBUTIONS_ALL, KEYCOLS (PO_DISTRIBUTION_ID,GL_ENCUMBERED_PERIOD_NAME),COLS(PO_DISTRIBUTION_ID, PO_HEADER_ID, PO_LINE_ID, CODE_COMBINATION_ID, QUANTITY_ORDERED, PO_RELEASE_ID, QUANTITY_DELIVERED, QUANTITY_BILLED, QUANTITY_CANCELLED, REQ_DISTRIBUTION_ID, ENCUMBERED_AMOUNT, GL_ENCUMBERED_PERIOD_NAME, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID PO_DISTRIBUTIONS_ALL, PARAMS (P_TABLE_NAME ='PO_DISTRIBUTIONS_ALL',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_DISTRIBUTIONS_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_HEADERS_ALL, KEYCOLS (PO_HEADER_ID,SEGMENT1),COLS(PO_HEADER_ID, SEGMENT1, VENDOR_ID, VENDOR_SITE_ID, BILL_TO_LOCATION_ID, TERMS_ID, CURRENCY_CODE, ORG_ID, PAY_ON_CODE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID PO_HEADERS_ALL, PARAMS (P_TABLE_NAME ='PO_HEADERS_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_HEADERS_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_LINE_LOCATIONS_ALL, KEYCOLS (LINE_LOCATION_ID,CLOSED_REASON),COLS(LINE_LOCATION_ID, PO_HEADER_ID, PO_LINE_ID, QUANTITY, QUANTITY_RECEIVED, QUANTITY_ACCEPTED, QUANTITY_REJECTED, QUANTITY_BILLED, QUANTITY_CANCELLED, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID PO_LINE_LOCATIONS_ALL, PARAMS (P_TABLE_NAME ='PO_LINE_LOCATIONS_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_LINE_LOCATIONS_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_LINES_ALL, KEYCOLS (PO_LINE_ID,ITEM_DESCRIPTION),COLS(PO_LINE_ID, PO_HEADER_ID, LINE_TYPE_ID, LINE_NUM, ITEM_ID, CATEGORY_ID, ITEM_DESCRIPTION, LIST_PRICE_PER_UNIT, UNIT_PRICE, QUANTITY, CLOSED_CODE, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID PO_LINES_ALL, PARAMS (P_TABLE_NAME ='PO_LINES_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_LINES_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_RELEASES_ALL, KEYCOLS (PO_RELEASE_ID),COLS(PO_RELEASE_ID, PO_HEADER_ID, RELEASE_NUM, AGENT_ID, PAY_ON_CODE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID PO_RELEASES_ALL, PARAMS (P_TABLE_NAME ='PO_RELEASES_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_RELEASES_ALL.P_COUNT_VAL) > 0 );
TABLE QP.QP_LIST_LINES, KEYCOLS (LIST_LINE_ID,START_DATE_ACTIVE),COLS(LIST_LINE_ID, LIST_HEADER_ID, START_DATE_ACTIVE, END_DATE_ACTIVE, INVENTORY_ITEM_ID, ORGANIZATION_ID, OPERAND, LIST_LINE_NO), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID QP_LIST_LINES, PARAMS (P_TABLE_NAME ='QP_LIST_LINES', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (QP_LIST_LINES.P_COUNT_VAL) > 0 );
TABLE AR.RA_CUST_TRX_LINE_GL_DIST_ALL, KEYCOLS (CUST_TRX_LINE_GL_DIST_ID,GL_DATE),COLS(CUST_TRX_LINE_GL_DIST_ID, CUSTOMER_TRX_LINE_ID, CODE_COMBINATION_ID, AMOUNT, GL_DATE, GL_POSTED_DATE, POSTING_CONTROL_ID, ACCOUNT_CLASS, CUSTOMER_TRX_ID, ACCTD_AMOUNT, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID RA_CUST_TRX_LINE_GL_DIST_ALL, PARAMS (P_TABLE_NAME ='RA_CUST_TRX_LINE_GL_DIST_ALL', P_KEY_VALUE1=@BEFORE(CUST_TRX_LINE_GL_DIST_ID), P_KEY_VALUE2=@BEFORE(CUSTOMER_TRX_LINE_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RA_CUST_TRX_LINE_GL_DIST_ALL.P_COUNT_VAL) > 0 );
TABLE AR.RA_CUSTOMER_TRX_ALL, KEYCOLS (CUSTOMER_TRX_ID,DOC_SEQUENCE_VALUE),COLS(CUSTOMER_TRX_ID, TRX_NUMBER, CUST_TRX_TYPE_ID, TRX_DATE, SET_OF_BOOKS_ID, BATCH_ID, BATCH_SOURCE_ID, SOLD_TO_CUSTOMER_ID, BILL_TO_CUSTOMER_ID, TERM_ID, PURCHASE_ORDER, INVOICE_CURRENCY_CODE, COMPLETE_FLAG, POSTING_CONTROL_ID, DOC_SEQUENCE_ID, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID RA_CUSTOMER_TRX_ALL, PARAMS (P_TABLE_NAME ='RA_CUSTOMER_TRX_ALL', P_KEY_VALUE1=@BEFORE(CUSTOMER_TRX_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RA_CUSTOMER_TRX_ALL.P_COUNT_VAL) > 0 );
TABLE AR.RA_CUSTOMER_TRX_LINES_ALL, KEYCOLS (CUSTOMER_TRX_LINE_ID,DESCRIPTION,SALES_ORDER),COLS(CUSTOMER_TRX_LINE_ID, CUSTOMER_TRX_ID, LINE_NUMBER, INVENTORY_ITEM_ID, DESCRIPTION, QUANTITY_INVOICED, UNIT_STANDARD_PRICE, SALES_ORDER, SALES_ORDER_LINE, LINE_TYPE, EXTENDED_AMOUNT, TAXABLE_AMOUNT, WAREHOUSE_ID,UNIT_SELLING_PRICE,REVENUE_AMOUNT), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID RA_CUSTOMER_TRX_LINES_ALL, PARAMS (P_TABLE_NAME ='RA_CUSTOMER_TRX_LINES_ALL', P_KEY_VALUE1=@BEFORE(CUSTOMER_TRX_LINE_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RA_CUSTOMER_TRX_LINES_ALL.P_COUNT_VAL) > 0 );
--TABLE PO.RCV_PARAMETERS, COLS(ORGANIZATION_ID,QTY_RCV_TOLERANCE,QTY_RCV_EXCEPTION_CODE,ENFORCE_SHIP_TO_LOCATION_CODE,ALLOW_EXPRESS_DELIVERY_FLAG,DAYS_EARLY_RECEIPT_ALLOWED,DAYS_LATE_RECEIPT_ALLOWED,RECEIPT_DAYS_EXCEPTION_CODE,RECEIVING_ROUTING_ID,ALLOW_SUBSTITUTE_RECEIPTS_FLAG,ALLOW_UNORDERED_RECEIPTS_FLAG,BLIND_RECEIVING_FLAG,RECEIVING_ACCOUNT_ID,RECEIPT_ASN_EXISTS_CODE,USER_DEFINED_RECEIPT_NUM_CODE,MANUAL_RECEIPT_NUM_TYPE), SQLEXEC (SPNAME XXC.XXCTCL_GG_FILTER_CONDITION_PKG.XXCTCL_GG_FILTER_CONDITION_PRC, ID RCV_PARAMETERS, PARAMS (P_TABLE_NAME ='RCV_PARAMETERS',P_KEY_VALUE1=@BEFORE(ORGANIZATION_ID), P_KEY_VALUE7=@AFTER(ORGANIZATION_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RCV_PARAMETERS.P_COUNT_VAL) > 0 );
TABLE PO.RCV_SHIPMENT_HEADERS, KEYCOLS (SHIPMENT_HEADER_ID,RECEIPT_NUM),COLS(SHIPMENT_HEADER_ID, RECEIPT_SOURCE_CODE, VENDOR_ID, VENDOR_SITE_ID, ORGANIZATION_ID, SHIPMENT_NUM, RECEIPT_NUM, PACKING_SLIP, SHIPPED_DATE, CURRENCY_CODE, SHIP_TO_ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID RCV_SHIPMENT_HEADERS, PARAMS (P_TABLE_NAME ='RCV_SHIPMENT_HEADERS', P_KEY_VALUE1=@BEFORE(SHIPMENT_HEADER_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RCV_SHIPMENT_HEADERS.P_COUNT_VAL) > 0 );
TABLE PO.RCV_SHIPMENT_LINES, KEYCOLS (SHIPMENT_LINE_ID,ITEM_DESCRIPTION,PACKING_SLIP),COLS(SHIPMENT_LINE_ID, SHIPMENT_HEADER_ID, LINE_NUM, QUANTITY_SHIPPED, QUANTITY_RECEIVED, ITEM_DESCRIPTION, ITEM_ID, PO_HEADER_ID, PO_RELEASE_ID, PO_LINE_ID, PO_LINE_LOCATION_ID, PACKING_SLIP, TO_ORGANIZATION_ID,UNIT_OF_MEASURE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID RCV_SHIPMENT_LINES, PARAMS (P_TABLE_NAME ='RCV_SHIPMENT_LINES', P_KEY_VALUE1=@BEFORE(SHIPMENT_LINE_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RCV_SHIPMENT_LINES.P_COUNT_VAL) > 0 );
TABLE PO.RCV_TRANSACTIONS, KEYCOLS (TRANSACTION_ID,TRANSACTION_TYPE),COLS(TRANSACTION_ID, TRANSACTION_TYPE, TRANSACTION_DATE, QUANTITY, UNIT_OF_MEASURE, SHIPMENT_HEADER_ID, SHIPMENT_LINE_ID, DESTINATION_TYPE_CODE, PRIMARY_QUANTITY, PRIMARY_UNIT_OF_MEASURE, PO_HEADER_ID, PO_RELEASE_ID, PO_LINE_ID, PO_LINE_LOCATION_ID, PO_DISTRIBUTION_ID, PO_UNIT_PRICE, CURRENCY_CODE, VENDOR_ID, VENDOR_SITE_ID, ORGANIZATION_ID, INVOICE_STATUS_CODE, QUANTITY_BILLED, AMOUNT_BILLED), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID RCV_TRANSACTIONS, PARAMS (P_TABLE_NAME ='RCV_TRANSACTIONS', P_KEY_VALUE1=@BEFORE(TRANSACTION_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RCV_TRANSACTIONS.P_COUNT_VAL) > 0 );
TABLE WSH.WSH_DELIVERY_DETAILS, KEYCOLS (DELIVERY_DETAIL_ID,SOURCE_HEADER_NUMBER),COLS(DELIVERY_DETAIL_ID, SOURCE_HEADER_ID, SOURCE_LINE_ID, SOURCE_HEADER_TYPE_ID, CUST_PO_NUMBER, CUSTOMER_ID, INVENTORY_ITEM_ID, ITEM_DESCRIPTION, ORGANIZATION_ID, REQUESTED_QUANTITY, FREIGHT_TERMS_CODE, FOB_CODE, ORG_ID), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID WSH_DELIVERY_DETAILS, PARAMS (P_TABLE_NAME ='WSH_DELIVERY_DETAILS', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (WSH_DELIVERY_DETAILS.P_COUNT_VAL) > 0 );
TABLE XLA.XLA_AE_HEADERS, KEYCOLS (AE_HEADER_ID,DOC_SEQUENCE_VALUE),COLS(AE_HEADER_ID, ENTITY_ID, EVENT_ID, EVENT_TYPE_CODE, ACCOUNTING_DATE, JE_CATEGORY_NAME, ACCOUNTING_ENTRY_STATUS_CODE, DESCRIPTION, DOC_SEQUENCE_ID, DOC_SEQUENCE_VALUE, ACCOUNTING_BATCH_ID, PERIOD_NAME), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID XLA_AE_HEADERS, PARAMS (P_TABLE_NAME ='XLA_AE_HEADERS', P_KEY_VALUE1=@BEFORE(AE_HEADER_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (XLA_AE_HEADERS.P_COUNT_VAL) > 0 );
TABLE XLA.XLA_AE_LINES, KEYCOLS (AE_HEADER_ID,AE_LINE_NUM,DESCRIPTION),COLS(AE_HEADER_ID, AE_LINE_NUM, CODE_COMBINATION_ID, GL_SL_LINK_ID, ACCOUNTING_CLASS_CODE, PARTY_ID, PARTY_SITE_ID, ENTERED_DR, ENTERED_CR, ACCOUNTED_DR, ACCOUNTED_CR, DESCRIPTION, CURRENCY_CODE,ACCOUNTING_DATE), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID XLA_AE_LINES, PARAMS (P_TABLE_NAME ='XLA_AE_LINES', P_KEY_VALUE1=@BEFORE(AE_HEADER_ID), P_KEY_VALUE2=@BEFORE(AE_LINE_NUM),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (XLA_AE_LINES.P_COUNT_VAL) > 0 );
TABLE XLA.XLA_DISTRIBUTION_LINKS, KEYCOLS (AE_HEADER_ID,AE_LINE_NUM),COLS(AE_HEADER_ID, AE_LINE_NUM, EVENT_ID, SOURCE_DISTRIBUTION_TYPE, EVENT_CLASS_CODE, EVENT_TYPE_CODE, UNROUNDED_ENTERED_DR, UNROUNDED_ENTERED_CR, DOC_ROUNDING_ENTERED_AMT, DOC_ROUNDING_ACCTD_AMT, UNROUNDED_ACCOUNTED_CR, UNROUNDED_ACCOUNTED_DR), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID XLA_DISTRIBUTION_LINKS, PARAMS (P_TABLE_NAME ='XLA_DISTRIBUTION_LINKS', P_KEY_VALUE1=@BEFORE(AE_HEADER_ID), P_KEY_VALUE2=@BEFORE(AE_LINE_NUM) , P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (XLA_DISTRIBUTION_LINKS.P_COUNT_VAL) > 0 );
--TABLE XLE.XLE_ENTITY_PROFILES, KEYCOLS (LEGAL_ENTITY_IDPARTY_ID,NAME), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID XLE_ENTITY_PROFILES, PARAMS (P_TABLE_NAME ='XLE_ENTITY_PROFILES',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (XLE_ENTITY_PROFILES.P_COUNT_VAL) > 0 );
--TABLE XLE.XLE_REGISTRATIONS, KEYCOLS (REGISTRATION_ID  ,REGISTERED_NAME), SQLEXEC (SPNAME XXC.xxctcl_gg_filter_condition_pkg.xxctcl_gg_filter_condition_prc, ID XLE_REGISTRATIONS, PARAMS (P_TABLE_NAME ='XLE_REGISTRATIONS',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (XLE_REGISTRATIONS.P_COUNT_VAL) > 0 
TABLE XLE.XLE_REGISTRATIONS,KEYCOLS(REGISTRATION_ID,REGISTERED_NAME), SQLEXEC (ID XLE_REGISTRATIONS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(XLE_REGISTRATIONS.OUTPUT ) > 0);
TABLE XLE.XLE_ENTITY_PROFILES, KEYCOLS(LEGAL_ENTITY_ID,PARTY_ID,NAME),SQLEXEC (ID XLE_ENTITY_PROFILES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(XLE_ENTITY_PROFILES.OUTPUT ) > 0);
TABLE JA.JAI_CMN_INVENTORY_ORGS,KEYCOLS(ORG_UNIT_ID,PAN_NO), SQLEXEC (ID JAI_CMN_INVENTORY_ORGS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(JAI_CMN_INVENTORY_ORGS.OUTPUT ) > 0);
TABLE HR.HR_ORGANIZATION_INFORMATION,KEYCOLS (ORG_INFORMATION_ID,ORG_INFORMATION_CONTEXT), SQLEXEC (ID HR_ORGANIZATION_INFORMATION,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HR_ORGANIZATION_INFORMATION.OUTPUT ) > 0);
TABLE HR.HR_ALL_ORGANIZATION_UNITS,KEYCOLS (ORGANIZATION_ID,NAME), SQLEXEC (ID HR_ALL_ORGANIZATION_UNITS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HR_ALL_ORGANIZATION_UNITS.OUTPUT ) > 0);
TABLE AP.AP_BANK_ACCOUNTS_ALL,KEYCOLS (BANK_ACCOUNT_ID),COLS(BANK_ACCOUNT_ID, BANK_ACCOUNT_NAME, BANK_ACCOUNT_NUM, BANK_BRANCH_ID, CURRENCY_CODE, GAIN_CODE_COMBINATION_ID, LOSS_CODE_COMBINATION_ID, ORG_ID), SQLEXEC (ID AP_BANK_ACCOUNTS_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_BANK_ACCOUNTS_ALL.OUTPUT ) > 0);
TABLE AP.AP_BANK_ACCOUNT_USES_ALL,KEYCOLS (BANK_ACCOUNT_USES_ID),COLS(BANK_ACCOUNT_USES_ID, VENDOR_ID, VENDOR_SITE_ID, EXTERNAL_BANK_ACCOUNT_ID, START_DATE, END_DATE, PRIMARY_FLAG, ORG_ID), SQLEXEC (ID AP_BANK_ACCOUNT_USES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_BANK_ACCOUNT_USES_ALL.OUTPUT ) > 0);
TABLE PO.RCV_PARAMETERS,KEYCOLS (ORGANIZATION_ID), COLS(ORGANIZATION_ID,QTY_RCV_TOLERANCE,QTY_RCV_EXCEPTION_CODE,ENFORCE_SHIP_TO_LOCATION_CODE,ALLOW_EXPRESS_DELIVERY_FLAG,DAYS_EARLY_RECEIPT_ALLOWED,DAYS_LATE_RECEIPT_ALLOWED,RECEIPT_DAYS_EXCEPTION_CODE,RECEIVING_ROUTING_ID,ALLOW_SUBSTITUTE_RECEIPTS_FLAG,ALLOW_UNORDERED_RECEIPTS_FLAG,BLIND_RECEIVING_FLAG,RECEIVING_ACCOUNT_ID,RECEIPT_ASN_EXISTS_CODE,USER_DEFINED_RECEIPT_NUM_CODE,MANUAL_RECEIPT_NUM_TYPE),SQLEXEC(ID RCV_PARAMETERS, QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(RCV_PARAMETERS.OUTPUT ) > 0);
TABLE AR.RA_CUST_TRX_TYPES_ALL, KEYCOLS (CUST_TRX_TYPE_ID,NAME),COLS(CUST_TRX_TYPE_ID, POST_TO_GL, ACCOUNTING_AFFECT_FLAG, CREDIT_MEMO_TYPE_ID, STATUS, NAME, DESCRIPTION, TYPE, GL_ID_REV, GL_ID_FREIGHT, GL_ID_REC, ALLOW_FREIGHT_FLAG, ALLOW_OVERAPPLICATION_FLAG, CREATION_SIGN, END_DATE, GL_ID_CLEARING, GL_ID_TAX, GL_ID_UNBILLED, GL_ID_UNEARNED, START_DATE, TAX_CALCULATION_FLAG, ORG_ID,NATURAL_APPLICATION_ONLY_FLAG, EXCLUDE_FROM_LATE_CHARGES, ADJ_POST_TO_GL),SQLEXEC (ID RA_CUST_TRX_TYPES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(RA_CUST_TRX_TYPES_ALL.OUTPUT ) > 0);
TABLE AR.RA_ACCOUNT_DEFAULT_SEGMENTS,SQLEXEC (ID RA_ACCOUNT_DEFAULT_SEGMENTS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(RA_ACCOUNT_DEFAULT_SEGMENTS.OUTPUT ) > 0);
TABLE QP.QP_LIST_HEADERS_B, KEYCOLS (LIST_HEADER_ID,START_DATE_ACTIVE),COLS(LIST_HEADER_ID, START_DATE_ACTIVE, END_DATE_ACTIVE, SOURCE_SYSTEM_CODE, ACTIVE_FLAG),SQLEXEC (ID QP_LIST_HEADERS_B,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(QP_LIST_HEADERS_B.OUTPUT ) > 0);
TABLE PO.PO_SYSTEM_PARAMETERS_ALL, KEYCOLS (ORG_ID),SQLEXEC (ID PO_SYSTEM_PARAMETERS_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(PO_SYSTEM_PARAMETERS_ALL.OUTPUT ) > 0);
TABLE INV.ORG_ACCT_PERIODS, KEYCOLS (ACCT_PERIOD_ID,ORGANIZATION_ID),COLS(ACCT_PERIOD_ID, ORGANIZATION_ID, PERIOD_YEAR, PERIOD_NUM, PERIOD_NAME, PERIOD_START_DATE, PERIOD_CLOSE_DATE, OPEN_FLAG, SUMMARIZED_FLAG),SQLEXEC (ID ORG_ACCT_PERIODS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(ORG_ACCT_PERIODS.OUTPUT ) > 0);
TABLE INV.MTL_SYSTEM_ITEMS_B, KEYCOLS (INVENTORY_ITEM_ID,ORGANIZATION_ID,SEGMENT1),COLS(INVENTORY_ITEM_ID, ORGANIZATION_ID, DESCRIPTION, SEGMENT1, EXPENSE_ACCOUNT, ENCUMBRANCE_ACCOUNT, PRIMARY_UOM_CODE, COST_OF_SALES_ACCOUNT, SALES_ACCOUNT),SQLEXEC (ID MTL_SYSTEM_ITEMS_B,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'), VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(MTL_SYSTEM_ITEMS_B.OUTPUT ) > 0);
TABLE INV.MTL_SECONDARY_INVENTORIES, KEYCOLS (SECONDARY_INVENTORY_NAME,ORGANIZATION_ID),COLS(SECONDARY_INVENTORY_NAME, ORGANIZATION_ID, DESCRIPTION, MATERIAL_ACCOUNT, MATERIAL_OVERHEAD_ACCOUNT, RESOURCE_ACCOUNT, OVERHEAD_ACCOUNT, OUTSIDE_PROCESSING_ACCOUNT, QUANTITY_TRACKED, ASSET_INVENTORY, EXPENSE_ACCOUNT, ENCUMBRANCE_ACCOUNT), SQLEXEC (ID MTL_SECONDARY_INVENTORIES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(MTL_SECONDARY_INVENTORIES.OUTPUT ) > 0);
TABLE INV.MTL_PARAMETERS, KEYCOLS (ORGANIZATION_ID,ORGANIZATION_CODE),COLS(ORGANIZATION_ID, ORGANIZATION_CODE, MASTER_ORGANIZATION_ID, PRIMARY_COST_METHOD, COST_ORGANIZATION_ID, NEGATIVE_INV_RECEIPT_CODE, MATERIAL_ACCOUNT, MATERIAL_OVERHEAD_ACCOUNT, MATL_OVHD_ABSORPTION_ACCT, RESOURCE_ACCOUNT, PURCHASE_PRICE_VAR_ACCOUNT, AP_ACCRUAL_ACCOUNT, OVERHEAD_ACCOUNT, OUTSIDE_PROCESSING_ACCOUNT, INTRANSIT_INV_ACCOUNT, INTERORG_RECEIVABLES_ACCOUNT, INTERORG_PRICE_VAR_ACCOUNT, INTERORG_PAYABLES_ACCOUNT, COST_OF_SALES_ACCOUNT, ENCUMBRANCE_ACCOUNT, PROJECT_COST_ACCOUNT, INTERORG_TRANSFER_CR_ACCOUNT, INVOICE_PRICE_VAR_ACCOUNT, AVERAGE_COST_VAR_ACCOUNT, SALES_ACCOUNT, EXPENSE_ACCOUNT, DEFAULT_COST_GROUP_ID, DEFERRED_COGS_ACCOUNT), SQLEXEC (ID MTL_PARAMETERS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(MTL_PARAMETERS.OUTPUT ) > 0);
TABLE INV.MTL_INTERORG_PARAMETERS, KEYCOLS (FROM_ORGANIZATION_ID,TO_ORGANIZATION_ID),COLS(INTRANSIT_TYPE, FOB_POINT, MATL_INTERORG_TRANSFER_CODE, ROUTING_HEADER_ID, INTERNAL_ORDER_REQUIRED_FLAG, INTRANSIT_INV_ACCOUNT, INTERORG_TRANSFER_CR_ACCOUNT, INTERORG_RECEIVABLES_ACCOUNT, INTERORG_PAYABLES_ACCOUNT, INTERORG_PRICE_VAR_ACCOUNT, ELEMENTAL_VISIBILITY_ENABLED, MANUAL_RECEIPT_EXPENSE,RETURN_INTRANSIT_INV_ACCOUNT), SQLEXEC (ID MTL_INTERORG_PARAMETERS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(MTL_INTERORG_PARAMETERS.OUTPUT ) > 0);
TABLE AR.HZ_CUST_SITE_USES_ALL, KEYCOLS (SITE_USE_ID),COLS(SITE_USE_ID, CUST_ACCT_SITE_ID, SITE_USE_CODE, PRIMARY_FLAG, STATUS, LOCATION, ORG_ID), SQLEXEC (ID HZ_CUST_SITE_USES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HZ_CUST_SITE_USES_ALL.OUTPUT ) > 0);
TABLE AR.HZ_CUST_PROFILE_AMTS, KEYCOLS (CUST_ACCOUNT_PROFILE_ID),COLS(CUST_ACCOUNT_PROFILE_ID, CUST_ACCT_PROFILE_AMT_ID, CURRENCY_CODE, OVERALL_CREDIT_LIMIT, AUTO_REC_MIN_RECEIPT_AMOUNT, MIN_FC_BALANCE_AMOUNT, MIN_FC_INVOICE_AMOUNT, CUST_ACCOUNT_ID), SQLEXEC (ID HZ_CUST_PROFILE_AMTS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HZ_CUST_PROFILE_AMTS.OUTPUT ) > 0);
TABLE AR.HZ_CUST_ACCT_SITES_ALL, KEYCOLS (CUST_ACCT_SITE_ID),COLS(CUST_ACCT_SITE_ID, CUST_ACCOUNT_ID, PARTY_SITE_ID, STATUS, ORG_ID), SQLEXEC (ID HZ_CUST_ACCT_SITES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HZ_CUST_ACCT_SITES_ALL.OUTPUT ) > 0);
TABLE AR.HZ_CUST_ACCOUNTS, KEYCOLS (CUST_ACCOUNT_ID,ACCOUNT_NUMBER),COLS(CUST_ACCOUNT_ID, PARTY_ID, ACCOUNT_NUMBER, STATUS, CUSTOMER_TYPE,PAYMENT_TERM_ID), SQLEXEC (ID HZ_CUST_ACCOUNTS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HZ_CUST_ACCOUNTS.OUTPUT ) > 0);
TABLE GL.GL_PERIODS, KEYCOLS (PERIOD_SET_NAME,PERIOD_NAME),COLS(PERIOD_NAME, START_DATE, END_DATE, PERIOD_NUM, ADJUSTMENT_PERIOD_FLAG),SQLEXEC (ID GL_PERIODS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_PERIODS.OUTPUT ) > 0);
TABLE GL.GL_PERIOD_TYPES, KEYCOLS (PERIOD_TYPE_ID,DESCRIPTION),COLS(PERIOD_TYPE, NUMBER_PER_FISCAL_YEAR, YEAR_TYPE_IN_NAME, USER_PERIOD_TYPE, DESCRIPTION),SQLEXEC (ID GL_PERIOD_TYPES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_PERIOD_TYPES.OUTPUT ) > 0);
TABLE GL.GL_PERIOD_STATUSES, KEYCOLS (APPLICATION_ID,PERIOD_NAME,SET_OF_BOOKS_ID),COLS(SET_OF_BOOKS_ID, PERIOD_NAME, START_DATE, END_DATE, PERIOD_YEAR),SQLEXEC (ID GL_PERIOD_STATUSES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_PERIOD_STATUSES.OUTPUT ) > 0);
TABLE GL.GL_LEDGERS, KEYCOLS (LEDGER_ID,NAME,DESCRIPTION),COLS(LEDGER_ID, NAME, SHORT_NAME, DESCRIPTION, LEDGER_CATEGORY_CODE, CURRENCY_CODE, PERIOD_SET_NAME), SQLEXEC (ID GL_LEDGERS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_LEDGERS.OUTPUT ) > 0);
TABLE APPLSYS.FND_FLEX_VALUES_TL, KEYCOLS (FLEX_VALUE_ID,LANGUAGE,FLEX_VALUE_MEANING,DESCRIPTION),COLS(FLEX_VALUE_ID, DESCRIPTION, FLEX_VALUE_MEANING),SQLEXEC (ID FND_FLEX_VALUES_TL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FND_FLEX_VALUES_TL.OUTPUT ) > 0);
TABLE APPLSYS.FND_FLEX_VALUES, KEYCOLS (FLEX_VALUE_ID,FLEX_VALUE),COLS(FLEX_VALUE_SET_ID, FLEX_VALUE_ID, FLEX_VALUE, ENABLED_FLAG, SUMMARY_FLAG, START_DATE_ACTIVE, END_DATE_ACTIVE),SQLEXEC (ID FND_FLEX_VALUES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FND_FLEX_VALUES.OUTPUT ) > 0);
TABLE AR.AR_SYSTEM_PARAMETERS_ALL, KEYCOLS (ORG_ID), SQLEXEC (ID AR_SYSTEM_PARAMETERS_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AR_SYSTEM_PARAMETERS_ALL.OUTPUT ) > 0);
TABLE AR.AR_RECEIVABLES_TRX_ALL, KEYCOLS (RECEIVABLES_TRX_ID,NAME),COLS(RECEIVABLES_TRX_ID, NAME, CODE_COMBINATION_ID, DESCRIPTION, STATUS, TYPE, START_DATE_ACTIVE, END_DATE_ACTIVE, ORG_ID),SQLEXEC (ID AR_RECEIVABLES_TRX_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AR_RECEIVABLES_TRX_ALL.OUTPUT ) > 0);
TABLE AP.AP_SYSTEM_PARAMETERS_ALL, KEYCOLS (ORG_ID),SQLEXEC (ID AP_SYSTEM_PARAMETERS_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_SYSTEM_PARAMETERS_ALL.OUTPUT ) > 0);
TABLE AP.AP_SUPPLIERS, KEYCOLS (VENDOR_ID,VENDOR_NAME,SEGMENT1),COLS(VENDOR_ID, VENDOR_NAME, SEGMENT1, VENDOR_TYPE_LOOKUP_CODE, TERMS_ID, PAY_DATE_BASIS_LOOKUP_CODE, PAY_GROUP_LOOKUP_CODE, PAYMENT_PRIORITY, START_DATE_ACTIVE, END_DATE_ACTIVE, MINORITY_GROUP_LOOKUP_CODE, BANK_ACCOUNT_NUM, BANK_NUM, TERMS_DATE_BASIS, ATTRIBUTE3, ATTRIBUTE4,INVOICE_CURRENCY_CODE), SQLEXEC (ID AP_SUPPLIERS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_SUPPLIERS.OUTPUT ) > 0);
TABLE AP.AP_SUPPLIER_SITES_ALL, KEYCOLS (VENDOR_SITE_ID,ADDRESS_LINE1,CITY,COUNTRY),COLS(VENDOR_SITE_ID, VENDOR_ID, VENDOR_SITE_CODE, PAY_SITE_FLAG, ACCTS_PAY_CODE_COMBINATION_ID, PREPAY_CODE_COMBINATION_ID, PAY_GROUP_LOOKUP_CODE, PAYMENT_PRIORITY, TERMS_ID, PAY_DATE_BASIS_LOOKUP_CODE, ATTRIBUTE5, ATTRIBUTE8, ATTRIBUTE9, ORG_ID,INVOICE_CURRENCY_CODE), SQLEXEC (ID AP_SUPPLIER_SITES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_SUPPLIER_SITES_ALL.OUTPUT ) > 0);
TABLE AP.AP_BANK_BRANCHES, KEYCOLS (BANK_BRANCH_ID,BANK_NAME),COLS(BANK_BRANCH_ID, BANK_NAME, BANK_BRANCH_NAME), SQLEXEC (ID AP_BANK_BRANCHES, QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_BANK_BRANCHES.OUTPUT ) > 0);
TABLE GL.GL_CODE_COMBINATIONS,KEYCOLS (CODE_COMBINATION_ID,SEGMENT1,SEGMENT2,SEGMENT3,SEGMENT4,SEGMENT5,SEGMENT6,SEGMENT7),COLS(CODE_COMBINATION_ID,CHART_OF_ACCOUNTS_ID,DETAIL_POSTING_ALLOWED_FLAG,DETAIL_BUDGETING_ALLOWED_FLAG,ACCOUNT_TYPE,ENABLED_FLAG,SUMMARY_FLAG,SEGMENT1,SEGMENT2,SEGMENT3,SEGMENT4,SEGMENT5,SEGMENT6,SEGMENT7,START_DATE_ACTIVE,END_DATE_ACTIVE,ALTERNATE_CODE_COMBINATION_ID), SQLEXEC (ID GL_CODE_COMBINATIONS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_CODE_COMBINATIONS.OUTPUT ) > 0);
TABLE FA.FA_METHODS, KEYCOLS(METHOD_ID,NAME),SQLEXEC (ID FA_METHODS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FA_METHODS.OUTPUT ) > 0);
TABLE FA.FA_DEPRN_PERIODS, KEYCOLS (BOOK_TYPE_CODE,PERIOD_COUNTER,PERIOD_NAME,FISCAL_YEAR),COLS(BOOK_TYPE_CODE,PERIOD_NAME,PERIOD_COUNTER,FISCAL_YEAR,PERIOD_OPEN_DATE,PERIOD_CLOSE_DATE,CALENDAR_PERIOD_CLOSE_DATE),SQLEXEC (ID FA_DEPRN_PERIODS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FA_DEPRN_PERIODS.OUTPUT ) > 0);
TABLE FA.FA_CATEGORY_BOOKS,KEYCOLS (CATEGORY_ID,BOOK_TYPE_CODE),COLS(CATEGORY_ID,BOOK_TYPE_CODE,ASSET_CLEARING_ACCT,ASSET_COST_ACCT,CIP_CLEARING_ACCT,CIP_COST_ACCT,DEPRN_EXPENSE_ACCT,DEPRN_RESERVE_ACCT,REVAL_AMORTIZATION_ACCT,REVAL_RESERVE_ACCT,ASSET_COST_ACCOUNT_CCID,ASSET_CLEARING_ACCOUNT_CCID,WIP_COST_ACCOUNT_CCID,WIP_CLEARING_ACCOUNT_CCID,RESERVE_ACCOUNT_CCID,BONUS_DEPRN_EXPENSE_ACCT,BONUS_DEPRN_RESERVE_ACCT,BONUS_RESERVE_ACCT_CCID,DEPRN_EXPENSE_ACCOUNT_CCID,BONUS_EXPENSE_ACCOUNT_CCID), SQLEXEC (ID FA_CATEGORY_BOOKS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FA_CATEGORY_BOOKS.OUTPUT ) > 0);
TABLE FA.FA_CATEGORIES_B,KEYCOLS (CATEGORY_ID,SEGMENT2),COLS(CATEGORY_ID,CATEGORY_TYPE,CAPITALIZE_FLAG,SEGMENT1,SEGMENT2,SEGMENT3,SEGMENT4,START_DATE_ACTIVE,END_DATE_ACTIVE), SQLEXEC (ID FA_CATEGORIES_B,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FA_CATEGORIES_B.OUTPUT ) > 0);
TABLE FA.FA_CALENDAR_PERIODS, KEYCOLS (CALENDAR_TYPE,PERIOD_NUM,START_DATE,PERIOD_NAME),COLS(CALENDAR_TYPE,START_DATE,END_DATE,PERIOD_NAME),SQLEXEC (ID FA_CALENDAR_PERIODS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FA_CALENDAR_PERIODS.OUTPUT ) > 0);
TABLE FA.FA_BOOK_CONTROLS,KEYCOLS (BOOK_TYPE_CODE), SQLEXEC (ID FA_BOOK_CONTROLS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FA_BOOK_CONTROLS.OUTPUT ) > 0);
TABLE FA.FA_ASSET_HISTORY, COLS(ASSET_ID,CATEGORY_ID,ASSET_TYPE,UNITS,DATE_EFFECTIVE,DATE_INEFFECTIVE,TRANSACTION_HEADER_ID_IN,TRANSACTION_HEADER_ID_OUT),SQLEXEC (ID FA_ASSET_HISTORY,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FA_ASSET_HISTORY.OUTPUT ) > 0);
TABLE CE.CE_BANK_ACCOUNTS, KEYCOLS (BANK_ACCOUNT_ID,BANK_ACCOUNT_NAME,BANK_ACCOUNT_NUM),COLS(BANK_ACCOUNT_ID,BANK_ACCOUNT_NAME,BANK_ACCOUNT_NUM,BANK_BRANCH_ID,BANK_ID,CURRENCY_CODE,ACCOUNT_OWNER_ORG_ID,AP_USE_ALLOWED_FLAG,AR_USE_ALLOWED_FLAG,PAY_USE_ALLOWED_FLAG,MULTI_CURRENCY_ALLOWED_FLAG,PAYMENT_MULTI_CURRENCY_FLAG,RECEIPT_MULTI_CURRENCY_FLAG,ZERO_AMOUNT_ALLOWED), SQLEXEC (ID CE_BANK_ACCOUNTS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(CE_BANK_ACCOUNTS.OUTPUT ) > 0);
TABLE AR.AR_RECEIPT_METHODS,KEYCOLS(RECEIPT_METHOD_ID,NAME),COLS(RECEIPT_METHOD_ID,NAME,RECEIPT_CLASS_ID,START_DATE), SQLEXEC (ID AR_RECEIPT_METHODS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AR_RECEIPT_METHODS.OUTPUT ) > 0);
TABLE AR.AR_RECEIPT_CLASSES,KEYCOLS(RECEIPT_CLASS_ID,NAME),COLS(RECEIPT_CLASS_ID,CREATION_METHOD_CODE,CLEAR_FLAG,NAME,REMIT_FLAG,CREATION_STATUS), SQLEXEC (ID AR_RECEIPT_CLASSES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AR_RECEIPT_CLASSES.OUTPUT ) > 0);
TABLE AP.AP_TERMS_TL,KEYCOLS(TERM_ID,LANGUAGE,NAME,DESCRIPTION),COLS(TERM_ID,NAME,ENABLED_FLAG,DESCRIPTION,TYPE,START_DATE_ACTIVE,END_DATE_ACTIVE), SQLEXEC (ID AP_TERMS_TL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_TERMS_TL.OUTPUT ) > 0);
