EXTRACT E_CIL_01
OBEY ?PARAMFILES/DEFAULTS.prm
EXTTRAIL ./CIL_01/td
OBEY ?PARAMFILES/CIL.prm
CACHEMGR CACHESIZE 2048M CACHEDIRECTORY ?CACHEDIR/CIL_01

TABLE PO.PO_HEADERS_ALL, KEYCOLS (PO_HEADER_ID,SEGMENT1),COLS(PO_HEADER_ID, SEGMENT1, VENDOR_ID, VENDOR_SITE_ID, BILL_TO_LOCATION_ID, TERMS_ID, CURRENCY_CODE, ORG_ID, PAY_ON_CODE), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID PO_HEADERS_ALL, PARAMS (P_TABLE_NAME ='PO_HEADERS_ALL',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_HEADERS_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_LINES_ALL, KEYCOLS (PO_LINE_ID,ITEM_DESCRIPTION),COLS(PO_LINE_ID, PO_HEADER_ID, LINE_TYPE_ID, LINE_NUM, ITEM_ID, CATEGORY_ID, ITEM_DESCRIPTION, LIST_PRICE_PER_UNIT, UNIT_PRICE, QUANTITY, CLOSED_CODE, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID PO_LINES_ALL, PARAMS (P_TABLE_NAME ='PO_LINES_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_LINES_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_LINE_LOCATIONS_ALL, KEYCOLS (LINE_LOCATION_ID,CLOSED_REASON),COLS(LINE_LOCATION_ID, PO_HEADER_ID, PO_LINE_ID, QUANTITY, QUANTITY_RECEIVED, QUANTITY_ACCEPTED, QUANTITY_REJECTED, QUANTITY_BILLED, QUANTITY_CANCELLED, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID PO_LINE_LOCATIONS_ALL, PARAMS (P_TABLE_NAME ='PO_LINE_LOCATIONS_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_LINE_LOCATIONS_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_RELEASES_ALL, KEYCOLS (PO_RELEASE_ID),COLS(PO_RELEASE_ID, PO_HEADER_ID, RELEASE_NUM, AGENT_ID, PAY_ON_CODE), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID PO_RELEASES_ALL, PARAMS (P_TABLE_NAME ='PO_RELEASES_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_RELEASES_ALL.P_COUNT_VAL) > 0 );
TABLE PO.PO_DISTRIBUTIONS_ALL, KEYCOLS (PO_DISTRIBUTION_ID,GL_ENCUMBERED_PERIOD_NAME),COLS(PO_DISTRIBUTION_ID, PO_HEADER_ID, PO_LINE_ID, CODE_COMBINATION_ID, QUANTITY_ORDERED, PO_RELEASE_ID, QUANTITY_DELIVERED, QUANTITY_BILLED, QUANTITY_CANCELLED, REQ_DISTRIBUTION_ID, ENCUMBERED_AMOUNT, GL_ENCUMBERED_PERIOD_NAME, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID PO_DISTRIBUTIONS_ALL, PARAMS (P_TABLE_NAME ='PO_DISTRIBUTIONS_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (PO_DISTRIBUTIONS_ALL.P_COUNT_VAL) > 0 );
TABLE ONT.OE_ORDER_HEADERS_ALL, KEYCOLS (HEADER_ID,ORDER_NUMBER),COLS(HEADER_ID, ORG_ID, ORDER_TYPE_ID, ORDER_NUMBER, PRICE_LIST_ID, CUST_PO_NUMBER, PAYMENT_TERM_ID, FOB_POINT_CODE, SOLD_FROM_ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID OE_ORDER_HEADERS_ALL, PARAMS (P_TABLE_NAME ='OE_ORDER_HEADERS_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (OE_ORDER_HEADERS_ALL.P_COUNT_VAL) > 0 );
TABLE ONT.OE_ORDER_LINES_ALL, KEYCOLS (LINE_ID,LINE_NUMBER,ORDERED_ITEM),COLS(LINE_ID, ORG_ID, HEADER_ID, LINE_TYPE_ID, ORDERED_ITEM, ORDERED_QUANTITY, SHIP_FROM_ORG_ID, SOLD_FROM_ORG_ID, CUST_PO_NUMBER, INVENTORY_ITEM_ID, TAX_DATE, PRICE_LIST_ID, PRICING_DATE, FOB_POINT_CODE, PAYMENT_TERM_ID, UNIT_SELLING_PRICE, UNIT_LIST_PRICE,ORDER_QUANTITY_UOM), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID OE_ORDER_LINES_ALL, PARAMS (P_TABLE_NAME ='OE_ORDER_LINES_ALL',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (OE_ORDER_LINES_ALL.P_COUNT_VAL) > 0 );
TABLE WSH.WSH_DELIVERY_DETAILS, KEYCOLS (DELIVERY_DETAIL_ID,SOURCE_HEADER_NUMBER),COLS(DELIVERY_DETAIL_ID, SOURCE_HEADER_ID, SOURCE_LINE_ID, SOURCE_HEADER_TYPE_ID, CUST_PO_NUMBER, CUSTOMER_ID, INVENTORY_ITEM_ID, ITEM_DESCRIPTION, ORGANIZATION_ID, REQUESTED_QUANTITY, FREIGHT_TERMS_CODE, FOB_CODE, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID WSH_DELIVERY_DETAILS, PARAMS (P_TABLE_NAME ='WSH_DELIVERY_DETAILS',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (WSH_DELIVERY_DETAILS.P_COUNT_VAL) > 0 );
TABLE GL.GL_DAILY_RATES, KEYCOLS (CONVERSION_DATE,CONVERSION_TYPE,FROM_CURRENCY,TO_CURRENCY),COLS(FROM_CURRENCY, TO_CURRENCY, CONVERSION_DATE, CONVERSION_TYPE, CONVERSION_RATE, STATUS_CODE), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID GL_DAILY_RATES, PARAMS (P_TABLE_NAME ='GL_DAILY_RATES', P_KEY_VALUE1=@BEFORE(TO_CURRENCY), P_KEY_VALUE2=@BEFORE(CONVERSION_TYPE), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (GL_DAILY_RATES.P_COUNT_VAL) > 0 );
TABLE XLA.XLA_AE_HEADERS, KEYCOLS (AE_HEADER_ID,DOC_SEQUENCE_VALUE),COLS(AE_HEADER_ID, ENTITY_ID, EVENT_ID, EVENT_TYPE_CODE, ACCOUNTING_DATE, JE_CATEGORY_NAME, ACCOUNTING_ENTRY_STATUS_CODE, DESCRIPTION, DOC_SEQUENCE_ID, DOC_SEQUENCE_VALUE, ACCOUNTING_BATCH_ID, PERIOD_NAME), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID XLA_AE_HEADERS, PARAMS (P_TABLE_NAME ='XLA_AE_HEADERS', P_KEY_VALUE1=@BEFORE(AE_HEADER_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (XLA_AE_HEADERS.P_COUNT_VAL) > 0 );
TABLE XLA.XLA_AE_LINES, KEYCOLS (AE_HEADER_ID,AE_LINE_NUM,DESCRIPTION),COLS(AE_HEADER_ID, AE_LINE_NUM, CODE_COMBINATION_ID, GL_SL_LINK_ID, ACCOUNTING_CLASS_CODE, PARTY_ID, PARTY_SITE_ID, ENTERED_DR, ENTERED_CR, ACCOUNTED_DR, ACCOUNTED_CR, DESCRIPTION, CURRENCY_CODE,ACCOUNTING_DATE), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID XLA_AE_LINES, PARAMS (P_TABLE_NAME ='XLA_AE_LINES',P_KEY_VALUE1=@BEFORE(AE_HEADER_ID), P_KEY_VALUE2=@BEFORE(AE_LINE_NUM), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (XLA_AE_LINES.P_COUNT_VAL) > 0 );
TABLE PO.RCV_TRANSACTIONS, KEYCOLS (TRANSACTION_ID,TRANSACTION_TYPE),COLS(TRANSACTION_ID, TRANSACTION_TYPE, TRANSACTION_DATE, QUANTITY, UNIT_OF_MEASURE, SHIPMENT_HEADER_ID, SHIPMENT_LINE_ID, DESTINATION_TYPE_CODE, PRIMARY_QUANTITY, PRIMARY_UNIT_OF_MEASURE, PO_HEADER_ID, PO_RELEASE_ID, PO_LINE_ID, PO_LINE_LOCATION_ID, PO_DISTRIBUTION_ID, PO_UNIT_PRICE, CURRENCY_CODE, VENDOR_ID, VENDOR_SITE_ID, ORGANIZATION_ID, INVOICE_STATUS_CODE, QUANTITY_BILLED, AMOUNT_BILLED), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID RCV_TRANSACTIONS, PARAMS (P_TABLE_NAME ='RCV_TRANSACTIONS',P_KEY_VALUE1=@BEFORE(TRANSACTION_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RCV_TRANSACTIONS.P_COUNT_VAL) > 0 );
TABLE PO.RCV_SHIPMENT_HEADERS, KEYCOLS (SHIPMENT_HEADER_ID,RECEIPT_NUM),COLS(SHIPMENT_HEADER_ID, RECEIPT_SOURCE_CODE, VENDOR_ID, VENDOR_SITE_ID, ORGANIZATION_ID, SHIPMENT_NUM, RECEIPT_NUM, PACKING_SLIP, SHIPPED_DATE, CURRENCY_CODE, SHIP_TO_ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID RCV_SHIPMENT_HEADERS, PARAMS (P_TABLE_NAME ='RCV_SHIPMENT_HEADERS', P_KEY_VALUE1=@BEFORE(SHIPMENT_HEADER_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RCV_SHIPMENT_HEADERS.P_COUNT_VAL) > 0 );
TABLE PO.RCV_SHIPMENT_LINES, KEYCOLS (SHIPMENT_LINE_ID,ITEM_DESCRIPTION,PACKING_SLIP),COLS(SHIPMENT_LINE_ID, SHIPMENT_HEADER_ID, LINE_NUM, QUANTITY_SHIPPED, QUANTITY_RECEIVED, ITEM_DESCRIPTION, ITEM_ID, PO_HEADER_ID, PO_RELEASE_ID, PO_LINE_ID, PO_LINE_LOCATION_ID, PACKING_SLIP, TO_ORGANIZATION_ID,UNIT_OF_MEASURE), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID RCV_SHIPMENT_LINES, PARAMS (P_TABLE_NAME ='RCV_SHIPMENT_LINES', P_KEY_VALUE1=@BEFORE(SHIPMENT_LINE_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RCV_SHIPMENT_LINES.P_COUNT_VAL) > 0 );
TABLE AR.RA_CUSTOMER_TRX_ALL, KEYCOLS (CUSTOMER_TRX_ID,DOC_SEQUENCE_VALUE),COLS(CUSTOMER_TRX_ID, TRX_NUMBER, CUST_TRX_TYPE_ID, TRX_DATE, SET_OF_BOOKS_ID, BATCH_ID, BATCH_SOURCE_ID, SOLD_TO_CUSTOMER_ID, BILL_TO_CUSTOMER_ID, TERM_ID, PURCHASE_ORDER, INVOICE_CURRENCY_CODE, COMPLETE_FLAG, POSTING_CONTROL_ID, DOC_SEQUENCE_ID, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID RA_CUSTOMER_TRX_ALL, PARAMS (P_TABLE_NAME ='RA_CUSTOMER_TRX_ALL',P_KEY_VALUE1=@BEFORE(CUSTOMER_TRX_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RA_CUSTOMER_TRX_ALL.P_COUNT_VAL) > 0 );
TABLE AR.RA_CUSTOMER_TRX_LINES_ALL, KEYCOLS (CUSTOMER_TRX_LINE_ID,DESCRIPTION,SALES_ORDER),COLS(CUSTOMER_TRX_LINE_ID, CUSTOMER_TRX_ID, LINE_NUMBER, INVENTORY_ITEM_ID, DESCRIPTION, QUANTITY_INVOICED, UNIT_STANDARD_PRICE, SALES_ORDER, SALES_ORDER_LINE, LINE_TYPE, EXTENDED_AMOUNT, TAXABLE_AMOUNT, WAREHOUSE_ID,UNIT_SELLING_PRICE,REVENUE_AMOUNT), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID RA_CUSTOMER_TRX_LINES_ALL, PARAMS (P_TABLE_NAME ='RA_CUSTOMER_TRX_LINES_ALL',P_KEY_VALUE1=@BEFORE(CUSTOMER_TRX_LINE_ID),P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RA_CUSTOMER_TRX_LINES_ALL.P_COUNT_VAL) > 0 );
TABLE AR.RA_CUST_TRX_LINE_GL_DIST_ALL, KEYCOLS (CUST_TRX_LINE_GL_DIST_ID,GL_DATE),COLS(CUST_TRX_LINE_GL_DIST_ID, CUSTOMER_TRX_LINE_ID, CODE_COMBINATION_ID, AMOUNT, GL_DATE, GL_POSTED_DATE, POSTING_CONTROL_ID, ACCOUNT_CLASS, CUSTOMER_TRX_ID, ACCTD_AMOUNT, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID RA_CUST_TRX_LINE_GL_DIST_ALL, PARAMS (P_TABLE_NAME ='RA_CUST_TRX_LINE_GL_DIST_ALL', P_KEY_VALUE1=@BEFORE(CUST_TRX_LINE_GL_DIST_ID), P_KEY_VALUE2=@BEFORE(CUSTOMER_TRX_LINE_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (RA_CUST_TRX_LINE_GL_DIST_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_PAYMENT_SCHEDULES_ALL, KEYCOLS (PAYMENT_SCHEDULE_ID,TRX_NUMBER,TRX_DATE),COLS(PAYMENT_SCHEDULE_ID, CREATION_DATE, DUE_DATE, AMOUNT_DUE_ORIGINAL, AMOUNT_DUE_REMAINING, STATUS, CUST_TRX_TYPE_ID, CUSTOMER_ID, CUSTOMER_SITE_USE_ID, CUSTOMER_TRX_ID, TERM_ID, AMOUNT_LINE_ITEMS_ORIGINAL, AMOUNT_LINE_ITEMS_REMAINING, AMOUNT_APPLIED, AMOUNT_ADJUSTED, TAX_ORIGINAL, TAX_REMAINING, TRX_NUMBER, TRX_DATE, GL_DATE, ACCTD_AMOUNT_DUE_REMAINING), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID AR_PAYMENT_SCHEDULES_ALL, PARAMS (P_TABLE_NAME ='AR_PAYMENT_SCHEDULES_ALL', P_KEY_VALUE1=@BEFORE(PAYMENT_SCHEDULE_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_PAYMENT_SCHEDULES_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_REVENUE_ADJUSTMENTS_ALL, KEYCOLS (REVENUE_ADJUSTMENT_ID,REVENUE_ADJUSTMENT_NUMBER),COLS(REVENUE_ADJUSTMENT_ID, REVENUE_ADJUSTMENT_NUMBER, CUSTOMER_TRX_ID, APPLICATION_DATE, AMOUNT, GL_DATE, STATUS, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID AR_REVENUE_ADJUSTMENTS_ALL, PARAMS (P_TABLE_NAME ='AR_REVENUE_ADJUSTMENTS_ALL', P_KEY_VALUE1=@BEFORE(REVENUE_ADJUSTMENT_ID), P_KEY_VALUE2=@BEFORE(REVENUE_ADJUSTMENT_NUMBER), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_REVENUE_ADJUSTMENTS_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_DEFERRED_LINES_ALL, KEYCOLS (CUSTOMER_TRX_LINE_ID),COLS(CUSTOMER_TRX_LINE_ID, CUSTOMER_TRX_ID, AMOUNT_DUE_ORIGINAL, ACCTD_AMOUNT_DUE_ORIGINAL, AMOUNT_RECOGNIZED, ACCTD_AMOUNT_RECOGNIZED, AMOUNT_PENDING, ACCTD_AMOUNT_PENDING, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID AR_DEFERRED_LINES_ALL, PARAMS (P_TABLE_NAME ='AR_DEFERRED_LINES_ALL',P_KEY_VALUE1=@BEFORE(CUSTOMER_TRX_LINE_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_DEFERRED_LINES_ALL.P_COUNT_VAL) > 0 );
TABLE AR.AR_DISTRIBUTIONS_ALL, KEYCOLS (LINE_ID),COLS(LINE_ID, SOURCE_ID, SOURCE_TABLE, SOURCE_TYPE, CODE_COMBINATION_ID, AMOUNT_DR, AMOUNT_CR, ACCTD_AMOUNT_DR, ACCTD_AMOUNT_CR, ORG_ID,CURRENCY_CODE), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID AR_DISTRIBUTIONS_ALL, PARAMS (P_TABLE_NAME ='AR_DISTRIBUTIONS_ALL',P_KEY_VALUE1=@BEFORE(LINE_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (AR_DISTRIBUTIONS_ALL.P_COUNT_VAL) > 0 );
TABLE XLA.XLA_DISTRIBUTION_LINKS, KEYCOLS (AE_HEADER_ID,AE_LINE_NUM),COLS(AE_HEADER_ID, AE_LINE_NUM, EVENT_ID, SOURCE_DISTRIBUTION_TYPE, EVENT_CLASS_CODE, EVENT_TYPE_CODE, UNROUNDED_ENTERED_DR, UNROUNDED_ENTERED_CR, DOC_ROUNDING_ENTERED_AMT, DOC_ROUNDING_ACCTD_AMT, UNROUNDED_ACCOUNTED_CR, UNROUNDED_ACCOUNTED_DR), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID XLA_DISTRIBUTION_LINKS, PARAMS (P_TABLE_NAME ='XLA_DISTRIBUTION_LINKS',P_KEY_VALUE1=@BEFORE(AE_HEADER_ID), P_KEY_VALUE2=@BEFORE(AE_LINE_NUM) , P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (XLA_DISTRIBUTION_LINKS.P_COUNT_VAL) > 0 );
TABLE QP.QP_LIST_LINES, KEYCOLS (LIST_LINE_ID,START_DATE_ACTIVE),COLS(LIST_LINE_ID, LIST_HEADER_ID, START_DATE_ACTIVE, END_DATE_ACTIVE, INVENTORY_ITEM_ID, ORGANIZATION_ID, OPERAND, LIST_LINE_NO), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID QP_LIST_LINES, PARAMS (P_TABLE_NAME ='QP_LIST_LINES',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (QP_LIST_LINES.P_COUNT_VAL) > 0 );
TABLE ONT.OE_TRANSACTION_TYPES_ALL, KEYCOLS (TRANSACTION_TYPE_ID),COLS(TRANSACTION_TYPE_ID, START_DATE_ACTIVE, END_DATE_ACTIVE, CUST_TRX_TYPE_ID, COST_OF_GOODS_SOLD_ACCOUNT, PRICE_LIST_ID, WAREHOUSE_ID, INVOICING_RULE_ID, ACCOUNTING_RULE_ID, ACCOUNTING_CREDIT_METHOD_CODE, INVOICE_SOURCE_ID, ORG_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID OE_TRANSACTION_TYPES_ALL, PARAMS (P_TABLE_NAME ='OE_TRANSACTION_TYPES_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (OE_TRANSACTION_TYPES_ALL.P_COUNT_VAL) > 0 );
TABLE INV.MTL_MATERIAL_TRANSACTIONS, KEYCOLS (TRANSACTION_ID), COLS(TRANSACTION_ID, INVENTORY_ITEM_ID, ORGANIZATION_ID, SUBINVENTORY_CODE, TRANSACTION_TYPE_ID, TRANSACTION_QUANTITY, TRANSACTION_UOM, TRANSACTION_DATE, ACCT_PERIOD_ID, ACTUAL_COST, PRIOR_COST, NEW_COST), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID MTL_MATERIAL_TRANSACTIONS, PARAMS (P_TABLE_NAME ='MTL_MATERIAL_TRANSACTIONS', P_KEY_VALUE1=@BEFORE(TRANSACTION_ID), P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'), P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'), P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'), P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (MTL_MATERIAL_TRANSACTIONS.P_COUNT_VAL) > 0 );
TABLE IBY.IBY_EXTERNAL_PAYEES_ALL, KEYCOLS (EXT_PAYEE_ID,PAYEE_PARTY_ID),COLS(EXT_PAYEE_ID, PAYEE_PARTY_ID, PARTY_SITE_ID, SUPPLIER_SITE_ID, ORG_ID, ORG_TYPE, DEFAULT_PAYMENT_METHOD_CODE), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID IBY_EXTERNAL_PAYEES_ALL, PARAMS (P_TABLE_NAME ='IBY_EXTERNAL_PAYEES_ALL', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (IBY_EXTERNAL_PAYEES_ALL.P_COUNT_VAL) > 0 );
TABLE BOM.BOM_COMPONENTS_B, KEYCOLS (COMPONENT_SEQUENCE_ID,ITEM_NUM),COLS(COMPONENT_SEQUENCE_ID, COMPONENT_ITEM_ID, ITEM_NUM, COMPONENT_QUANTITY, EFFECTIVITY_DATE, IMPLEMENTATION_DATE, FROM_END_ITEM_UNIT_NUMBER, TO_END_ITEM_UNIT_NUMBER), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID BOM_COMPONENTS_B, PARAMS (P_TABLE_NAME ='BOM_COMPONENTS_B', P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (BOM_COMPONENTS_B.P_COUNT_VAL) > 0 );
TABLE BOM.BOM_STRUCTURES_B, KEYCOLS (BILL_SEQUENCE_ID),COLS(BILL_SEQUENCE_ID, ASSEMBLY_ITEM_ID, ORGANIZATION_ID, ATTRIBUTE1, COMMON_BILL_SEQUENCE_ID), SQLEXEC (SPNAME APPS.xxccil_gg_filter_condition_pkg.xxccil_gg_filter_condition_prc, ID BOM_STRUCTURES_B, PARAMS (P_TABLE_NAME ='BOM_STRUCTURES_B',P_PROG_VAL=@GETENV('TRANSACTION', 'PROGRAMNAME'),P_CLIENT_ID=@GETENV ('TRANSACTION','CLIENTIDENTIFIER'),P_COLLECTION_TIME=@GETENV ('GGHEADER','COMMITTIMESTAMP'),P_EVENT=@GETENV('GGHEADER','OPTYPE')),ALLPARAMS OPTIONAL, BEFOREFILTER), FILTER ( @GETVAL (BOM_STRUCTURES_B.P_COUNT_VAL) > 0 );
TABLE PO.RCV_PARAMETERS,KEYCOLS (ORGANIZATION_ID), COLS(ORGANIZATION_ID,QTY_RCV_TOLERANCE,QTY_RCV_EXCEPTION_CODE,ENFORCE_SHIP_TO_LOCATION_CODE,ALLOW_EXPRESS_DELIVERY_FLAG,DAYS_EARLY_RECEIPT_ALLOWED,DAYS_LATE_RECEIPT_ALLOWED,RECEIPT_DAYS_EXCEPTION_CODE,RECEIVING_ROUTING_ID,ALLOW_SUBSTITUTE_RECEIPTS_FLAG,ALLOW_UNORDERED_RECEIPTS_FLAG,BLIND_RECEIVING_FLAG,RECEIVING_ACCOUNT_ID,RECEIPT_ASN_EXISTS_CODE,USER_DEFINED_RECEIPT_NUM_CODE,MANUAL_RECEIPT_NUM_TYPE),SQLEXEC(ID RCV_PARAMETERS, QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(RCV_PARAMETERS.OUTPUT ) > 0);
TABLE AR.RA_CUST_TRX_TYPES_ALL, KEYCOLS (CUST_TRX_TYPE_ID,NAME),COLS(CUST_TRX_TYPE_ID, POST_TO_GL, ACCOUNTING_AFFECT_FLAG, CREDIT_MEMO_TYPE_ID, STATUS, NAME, DESCRIPTION, TYPE, GL_ID_REV, GL_ID_FREIGHT, GL_ID_REC, ALLOW_FREIGHT_FLAG, ALLOW_OVERAPPLICATION_FLAG, CREATION_SIGN, END_DATE, GL_ID_CLEARING, GL_ID_TAX, GL_ID_UNBILLED, GL_ID_UNEARNED, START_DATE, TAX_CALCULATION_FLAG, ORG_ID,NATURAL_APPLICATION_ONLY_FLAG, EXCLUDE_FROM_LATE_CHARGES, ADJ_POST_TO_GL),SQLEXEC (ID RA_CUST_TRX_TYPES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(RA_CUST_TRX_TYPES_ALL.OUTPUT ) > 0);
TABLE AR.RA_ACCOUNT_DEFAULT_SEGMENTS,SQLEXEC (ID RA_ACCOUNT_DEFAULT_SEGMENTS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(RA_ACCOUNT_DEFAULT_SEGMENTS.OUTPUT ) > 0);
TABLE QP.QP_LIST_HEADERS_B, KEYCOLS (LIST_HEADER_ID,START_DATE_ACTIVE),COLS(LIST_HEADER_ID, START_DATE_ACTIVE, END_DATE_ACTIVE, SOURCE_SYSTEM_CODE, ACTIVE_FLAG),SQLEXEC (ID QP_LIST_HEADERS_B,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(QP_LIST_HEADERS_B.OUTPUT ) > 0);
TABLE PO.PO_SYSTEM_PARAMETERS_ALL, KEYCOLS (ORG_ID),SQLEXEC (ID PO_SYSTEM_PARAMETERS_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(PO_SYSTEM_PARAMETERS_ALL.OUTPUT ) > 0);
TABLE INV.ORG_ACCT_PERIODS, KEYCOLS (ACCT_PERIOD_ID,ORGANIZATION_ID),COLS(ACCT_PERIOD_ID, ORGANIZATION_ID, PERIOD_YEAR, PERIOD_NUM, PERIOD_NAME, PERIOD_START_DATE, PERIOD_CLOSE_DATE, OPEN_FLAG, SUMMARIZED_FLAG),SQLEXEC (ID ORG_ACCT_PERIODS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(ORG_ACCT_PERIODS.OUTPUT ) > 0);
TABLE INV.MTL_SYSTEM_ITEMS_B, KEYCOLS (INVENTORY_ITEM_ID,ORGANIZATION_ID,SEGMENT1),COLS(INVENTORY_ITEM_ID, ORGANIZATION_ID, DESCRIPTION, SEGMENT1, EXPENSE_ACCOUNT, ENCUMBRANCE_ACCOUNT, PRIMARY_UOM_CODE, COST_OF_SALES_ACCOUNT, SALES_ACCOUNT),SQLEXEC (ID MTL_SYSTEM_ITEMS_B,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'), VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(MTL_SYSTEM_ITEMS_B.OUTPUT ) > 0);
TABLE INV.MTL_SECONDARY_INVENTORIES, KEYCOLS (SECONDARY_INVENTORY_NAME,ORGANIZATION_ID),COLS(SECONDARY_INVENTORY_NAME, ORGANIZATION_ID, DESCRIPTION, MATERIAL_ACCOUNT, MATERIAL_OVERHEAD_ACCOUNT, RESOURCE_ACCOUNT, OVERHEAD_ACCOUNT, OUTSIDE_PROCESSING_ACCOUNT, QUANTITY_TRACKED, ASSET_INVENTORY, EXPENSE_ACCOUNT, ENCUMBRANCE_ACCOUNT), SQLEXEC (ID MTL_SECONDARY_INVENTORIES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(MTL_SECONDARY_INVENTORIES.OUTPUT ) > 0);
TABLE INV.MTL_PARAMETERS, KEYCOLS (ORGANIZATION_ID,ORGANIZATION_CODE),COLS(ORGANIZATION_ID, ORGANIZATION_CODE, MASTER_ORGANIZATION_ID, PRIMARY_COST_METHOD, COST_ORGANIZATION_ID, NEGATIVE_INV_RECEIPT_CODE, MATERIAL_ACCOUNT, MATERIAL_OVERHEAD_ACCOUNT, MATL_OVHD_ABSORPTION_ACCT, RESOURCE_ACCOUNT, PURCHASE_PRICE_VAR_ACCOUNT, AP_ACCRUAL_ACCOUNT, OVERHEAD_ACCOUNT, OUTSIDE_PROCESSING_ACCOUNT, INTRANSIT_INV_ACCOUNT, INTERORG_RECEIVABLES_ACCOUNT, INTERORG_PRICE_VAR_ACCOUNT, INTERORG_PAYABLES_ACCOUNT, COST_OF_SALES_ACCOUNT, ENCUMBRANCE_ACCOUNT, PROJECT_COST_ACCOUNT, INTERORG_TRANSFER_CR_ACCOUNT, INVOICE_PRICE_VAR_ACCOUNT, AVERAGE_COST_VAR_ACCOUNT, SALES_ACCOUNT, EXPENSE_ACCOUNT, DEFAULT_COST_GROUP_ID, DEFERRED_COGS_ACCOUNT), SQLEXEC (ID MTL_PARAMETERS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(MTL_PARAMETERS.OUTPUT ) > 0);
TABLE INV.MTL_INTERORG_PARAMETERS, KEYCOLS (FROM_ORGANIZATION_ID,TO_ORGANIZATION_ID),COLS(INTRANSIT_TYPE, FOB_POINT, MATL_INTERORG_TRANSFER_CODE, ROUTING_HEADER_ID, INTERNAL_ORDER_REQUIRED_FLAG, INTRANSIT_INV_ACCOUNT, INTERORG_TRANSFER_CR_ACCOUNT, INTERORG_RECEIVABLES_ACCOUNT, INTERORG_PAYABLES_ACCOUNT, INTERORG_PRICE_VAR_ACCOUNT, ELEMENTAL_VISIBILITY_ENABLED, MANUAL_RECEIPT_EXPENSE,RETURN_INTRANSIT_INV_ACCOUNT), SQLEXEC (ID MTL_INTERORG_PARAMETERS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(MTL_INTERORG_PARAMETERS.OUTPUT ) > 0);
TABLE AR.HZ_CUST_SITE_USES_ALL, KEYCOLS (SITE_USE_ID),COLS(SITE_USE_ID, CUST_ACCT_SITE_ID, SITE_USE_CODE, PRIMARY_FLAG, STATUS, LOCATION, ORG_ID), SQLEXEC (ID HZ_CUST_SITE_USES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HZ_CUST_SITE_USES_ALL.OUTPUT ) > 0);
TABLE AR.HZ_CUST_PROFILE_AMTS, KEYCOLS (CUST_ACCOUNT_PROFILE_ID),COLS(CUST_ACCOUNT_PROFILE_ID, CUST_ACCT_PROFILE_AMT_ID, CURRENCY_CODE, OVERALL_CREDIT_LIMIT, AUTO_REC_MIN_RECEIPT_AMOUNT, MIN_FC_BALANCE_AMOUNT, MIN_FC_INVOICE_AMOUNT, CUST_ACCOUNT_ID), SQLEXEC (ID HZ_CUST_PROFILE_AMTS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HZ_CUST_PROFILE_AMTS.OUTPUT ) > 0);
TABLE AR.HZ_CUST_ACCT_SITES_ALL, KEYCOLS (CUST_ACCT_SITE_ID),COLS(CUST_ACCT_SITE_ID, CUST_ACCOUNT_ID, PARTY_SITE_ID, STATUS, ORG_ID), SQLEXEC (ID HZ_CUST_ACCT_SITES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HZ_CUST_ACCT_SITES_ALL.OUTPUT ) > 0);
TABLE AR.HZ_CUST_ACCOUNTS, KEYCOLS (CUST_ACCOUNT_ID,ACCOUNT_NUMBER),COLS(CUST_ACCOUNT_ID, PARTY_ID, ACCOUNT_NUMBER, STATUS, CUSTOMER_TYPE,PAYMENT_TERM_ID), SQLEXEC (ID HZ_CUST_ACCOUNTS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(HZ_CUST_ACCOUNTS.OUTPUT ) > 0);
TABLE GL.GL_PERIODS, KEYCOLS (PERIOD_SET_NAME,PERIOD_NAME),COLS(PERIOD_NAME, START_DATE, END_DATE, PERIOD_NUM, ADJUSTMENT_PERIOD_FLAG),SQLEXEC (ID GL_PERIODS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_PERIODS.OUTPUT ) > 0);
TABLE GL.GL_PERIOD_TYPES, KEYCOLS (PERIOD_TYPE_ID,DESCRIPTION),COLS(PERIOD_TYPE, NUMBER_PER_FISCAL_YEAR, YEAR_TYPE_IN_NAME, USER_PERIOD_TYPE, DESCRIPTION),SQLEXEC (ID GL_PERIOD_TYPES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_PERIOD_TYPES.OUTPUT ) > 0);
TABLE GL.GL_PERIOD_STATUSES, KEYCOLS (APPLICATION_ID,PERIOD_NAME,SET_OF_BOOKS_ID),COLS(SET_OF_BOOKS_ID, PERIOD_NAME, START_DATE, END_DATE, PERIOD_YEAR),SQLEXEC (ID GL_PERIOD_STATUSES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_PERIOD_STATUSES.OUTPUT ) > 0);
TABLE GL.GL_LEDGERS, KEYCOLS (LEDGER_ID,NAME,DESCRIPTION),COLS(LEDGER_ID, NAME, SHORT_NAME, DESCRIPTION, LEDGER_CATEGORY_CODE, CURRENCY_CODE, PERIOD_SET_NAME), SQLEXEC (ID GL_LEDGERS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(GL_LEDGERS.OUTPUT ) > 0);
TABLE APPLSYS.FND_FLEX_VALUES_TL, KEYCOLS (FLEX_VALUE_ID,LANGUAGE,FLEX_VALUE_MEANING,DESCRIPTION),COLS(FLEX_VALUE_ID, DESCRIPTION, FLEX_VALUE_MEANING),SQLEXEC (ID FND_FLEX_VALUES_TL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FND_FLEX_VALUES_TL.OUTPUT ) > 0);
TABLE APPLSYS.FND_FLEX_VALUES, KEYCOLS (FLEX_VALUE_ID,FLEX_VALUE),COLS(FLEX_VALUE_SET_ID, FLEX_VALUE_ID, FLEX_VALUE, ENABLED_FLAG, SUMMARY_FLAG, START_DATE_ACTIVE, END_DATE_ACTIVE),SQLEXEC (ID FND_FLEX_VALUES,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(FND_FLEX_VALUES.OUTPUT ) > 0);
TABLE AR.AR_SYSTEM_PARAMETERS_ALL, KEYCOLS (ORG_ID), SQLEXEC (ID AR_SYSTEM_PARAMETERS_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AR_SYSTEM_PARAMETERS_ALL.OUTPUT ) > 0);
TABLE AR.AR_RECEIVABLES_TRX_ALL, KEYCOLS (RECEIVABLES_TRX_ID,NAME),COLS(RECEIVABLES_TRX_ID, NAME, CODE_COMBINATION_ID, DESCRIPTION, STATUS, TYPE, START_DATE_ACTIVE, END_DATE_ACTIVE, ORG_ID),SQLEXEC (ID AR_RECEIVABLES_TRX_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AR_RECEIVABLES_TRX_ALL.OUTPUT ) > 0);
TABLE AP.AP_SYSTEM_PARAMETERS_ALL, KEYCOLS (ORG_ID),SQLEXEC (ID AP_SYSTEM_PARAMETERS_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_SYSTEM_PARAMETERS_ALL.OUTPUT ) > 0);
TABLE AP.AP_SUPPLIERS, KEYCOLS (VENDOR_ID,VENDOR_NAME,SEGMENT1),COLS(VENDOR_ID, VENDOR_NAME, SEGMENT1, VENDOR_TYPE_LOOKUP_CODE, TERMS_ID, PAY_DATE_BASIS_LOOKUP_CODE, PAY_GROUP_LOOKUP_CODE, PAYMENT_PRIORITY, START_DATE_ACTIVE, END_DATE_ACTIVE, MINORITY_GROUP_LOOKUP_CODE, BANK_ACCOUNT_NUM, BANK_NUM, TERMS_DATE_BASIS, ATTRIBUTE3, ATTRIBUTE4,INVOICE_CURRENCY_CODE), SQLEXEC (ID AP_SUPPLIERS,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_SUPPLIERS.OUTPUT ) > 0);
TABLE AP.AP_SUPPLIER_SITES_ALL, KEYCOLS (VENDOR_SITE_ID,ADDRESS_LINE1,CITY,COUNTRY),COLS(VENDOR_SITE_ID, VENDOR_ID, VENDOR_SITE_CODE, PAY_SITE_FLAG, ACCTS_PAY_CODE_COMBINATION_ID, PREPAY_CODE_COMBINATION_ID, PAY_GROUP_LOOKUP_CODE, PAYMENT_PRIORITY, TERMS_ID, PAY_DATE_BASIS_LOOKUP_CODE, ATTRIBUTE5, ATTRIBUTE8, ATTRIBUTE9, ORG_ID,INVOICE_CURRENCY_CODE), SQLEXEC (ID AP_SUPPLIER_SITES_ALL,QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL", PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_SUPPLIER_SITES_ALL.OUTPUT ) > 0);
TABLE AP.AP_BANK_BRANCHES, KEYCOLS (BANK_BRANCH_ID,BANK_NAME),COLS(BANK_BRANCH_ID, BANK_NAME, BANK_BRANCH_NAME), SQLEXEC (ID AP_BANK_BRANCHES, QUERY "SELECT CASE WHEN (:VAR1 IN ('INSERT', 'DELETE')) AND :VAR2 IS NOT NULL THEN 0 ELSE 1 END AS OUTPUT FROM DUAL",PARAMS (VAR1 =@GETENV('GGHEADER','OPTYPE'),  VAR2=@GETENV('TRANSACTION','CLIENTIDENTIFIER')), ALLPARAMS OPTIONAL, BEFOREFILTER),FILTER (@GETVAL(AP_BANK_BRANCHES.OUTPUT ) > 0);

